{
  "config": {
    "name": "UIengine Documentation",
    "version": "3.2.5",
    "update": 1647982443841,
    "logo": "/images/logo.svg",
    "source": {
      "pages": "/home/runner/work/uiengine/uiengine/docs/site",
      "additionalWatches": [
        "/home/runner/work/uiengine/uiengine/docs/*.md",
        "/home/runner/work/uiengine/uiengine/docs/adapter/*.md"
      ],
      "base": "/home/runner/work/uiengine/uiengine/docs",
      "configFile": "/home/runner/work/uiengine/uiengine/docs/uiengine.config.js"
    },
    "target": "/home/runner/work/uiengine/uiengine/docs/dist",
    "ui": {
      "customStylesFile": "/styles/docs.css",
      "meta": [
        {
          "tag": "meta",
          "attrs": {
            "name": "description",
            "content": "The UIengine is a workbench for UI-driven development: A tool for developers and designers to build and document web sites and apps."
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "stylesheet",
            "href": "https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "prefetch",
            "href": "https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://cdn.jsdelivr.net"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://s.ytimg.com"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://i.ytimg.com"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://www.google.com"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://fonts.gstatic.com"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://www.youtube-nocookie.com"
          }
        },
        {
          "tag": "link",
          "attrs": {
            "rel": "preconnect",
            "href": "https://yt3.ggpht.com"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:type",
            "content": "website"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:title",
            "content": "UIengine"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:url",
            "content": "https://uiengine.uix.space/"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:site_name",
            "content": "UIengine Documentation"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:description",
            "content": "The UIengine is a workbench for UI-driven development: A tool for developers and designers to build and document web sites and apps."
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:image:width",
            "content": 1024
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:image:height",
            "content": 640
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:image",
            "content": "http://uiengine.uix.space/card.png"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "og:image:secure_url",
            "content": "https://uiengine.uix.space/card.png"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "twitter:image",
            "content": "https://uiengine.uix.space/card.png"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "twitter:card",
            "content": "summary_large_image"
          }
        },
        {
          "tag": "meta",
          "attrs": {
            "name": "twitter:site",
            "content": "@dennisreimann"
          }
        }
      ],
      "foot": "\n      <script src=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js\"></script>\n      <script>\n        docsearch({\n          apiKey: '9feb71b81a25c046ff57fe54b86f879b',\n          indexName: 'uiengine',\n          inputSelector: '.topbar input[name=\"query\"]'\n        });\n      </script>",
      "base": "/"
    },
    "browserSync": {
      "open": false
    },
    "themes": [
      {
        "id": "_default",
        "title": "Default"
      }
    ],
    "adapters": {},
    "plugins": []
  },
  "plugins": {
    "ui": {
      "js": [],
      "css": [],
      "tabs": [],
      "actions": [],
      "iframe_js": []
    }
  },
  "pages": {
    "index": {
      "childIds": [
        "basics",
        "advanced",
        "adapters",
        "development"
      ],
      "id": "index",
      "title": "UIengine",
      "isTitleFromHeading": true,
      "path": "",
      "sourcePath": "site",
      "sourceFile": "site/page.config.js",
      "readmeFile": "site/README.md",
      "type": "documentation",
      "content": "<h1 id=\"uiengine\" tabindex=\"-1\">UIengine</h1>\n<p>Workbench for UI-driven development:\nA tool for developers and designers to build and document web sites and apps.</p>\n<p>Useful if you want to ‚Ä¶</p>\n<ul>\n<li>Create a living pattern library</li>\n<li>Document your design system</li>\n<li>Prototype with your apps components and templates</li>\n<li>Use code as a single source of truth</li>\n</ul>\n<figure><img src=\"./uiengine.png\" alt=\"UIengine: Workbench for UI-driven development\"></figure>\n<h2 id=\"%F0%9F%9A%80-what-it-enables\" tabindex=\"-1\">üöÄ  What it enables</h2>\n<ul>\n<li>Establish a UI-driven workflow and structure your web UI into modular components.</li>\n<li>Give your team and stakeholders a central spot to develop and discuss the UI.</li>\n<li>Replace deliverables with usable, testable and production ready output/code.</li>\n<li>Make documentation fun and easy by providing structure and nice looking pages.</li>\n</ul>\n<h2 id=\"%F0%9F%8F%8E-quickstart\" tabindex=\"-1\">üèé Quickstart</h2>\n<p>To explore the features yourself you can quickly initialize a project with some demo content:</p>\n<pre class=\"hljs lang-bash\"><code>mkdir uiengine-demo &amp;&amp; <span class=\"hljs-built_in\">cd</span> uiengine-demo &amp;&amp; npm init -y\nnpm install @uiengine/core @uiengine/adapter-html --save-dev\nnpx uiengine init --demo\nnpx uiengine build --serve --watch\n</code></pre>\n<p>See the <a href=\"https://uiengine.uix.space/basics/getting-started/\">getting started guide</a>\nfor further details.\nThere are also some <a href=\"https://www.youtube.com/watch?v=YBm_ye9da-Q&amp;list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2\">introduction videos</a>:</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction Videos\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"%F0%9F%96%A5-examples-and-screenshots\" tabindex=\"-1\">üñ• Examples and Screenshots</h2>\n<p>To get an idea of what a real-world project looks like, see the React sample project:</p>\n<ul>\n<li><a href=\"https://uiengine-sample-react.uix.space/design-system/\">Tasty BBQ Design System</a>: The UIengine output for this sample project</li>\n<li><a href=\"https://uiengine-sample-react.uix.space/\">Tasty BBQ Website</a>: The corresponding website, built with React and Next.js.</li>\n<li><a href=\"https://github.com/dennisreimann/uiengine-sample-react\">Tasty BBQ Source Code</a>.</li>\n</ul>\n<h2 id=\"%F0%9F%93%98-documentation\" tabindex=\"-1\">üìò Documentation</h2>\n<p>See the <a href=\"https://uiengine.uix.space/\">documentation</a> site, which is also generated with the UIengine.</p>\n<h2 id=\"%F0%9F%94%A9-technical-tl%3Bdr\" tabindex=\"-1\">üî© Technical TL;DR</h2>\n<p><a href=\"https://www.npmjs.com/package/@uiengine/core\"><img src=\"https://img.shields.io/npm/v/@uiengine/core.svg\" alt=\"npm\"></a>\n<a href=\"http://standardjs.com/\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\" alt=\"Standard - JavaScript Style Guide\"></a>\n<a href=\"https://github.com/dennisreimann/uiengine/actions/workflows/build.yml\"><img src=\"https://github.com/dennisreimann/uiengine/actions/workflows/build.yml/badge.svg\" alt=\"Build Status\"></a>\n<a href=\"https://github.com/dennisreimann/uiengine/actions/workflows/test.yml\"><img src=\"https://github.com/dennisreimann/uiengine/actions/workflows/test.yml/badge.svg\" alt=\"Test Status\"></a>\n<a href=\"https://snyk.io/test/github/dennisreimann/uiengine\"><img src=\"https://snyk.io/test/github/dennisreimann/uiengine/badge.svg\" alt=\"Known Vulnerabilities\"></a>\n<a href=\"https://coveralls.io/github/dennisreimann/uiengine?branch=master\"><img src=\"https://coveralls.io/repos/github/dennisreimann/uiengine/badge.svg?branch=master\" alt=\"Coverage Status\"></a>\n<a href=\"#-contributors\"><img src=\"https://img.shields.io/badge/all_contributors-5-orange.svg?style=flat-square\" alt=\"All Contributors\"></a>\n<a href=\"https://lernajs.io/\"><img src=\"https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg\" alt=\"Maintained with lerna\"></a>\n<a href=\"https://github.com/sponsors/dennisreimann\"><img src=\"https://badgen.net/badge/support/via%20donation/cyan\" alt=\"Support the project\"></a></p>\n<h3 id=\"%E2%9A%92-how-does-it-work%3F\" tabindex=\"-1\">‚öí How does it work?</h3>\n<p>At its core, the UIengine is a static site generator.\nIt can be used in standalone mode or integrated into your build process.</p>\n<p>‚û°Ô∏è Input: Your projects components, templates, pages and documentation</p>\n<p>‚¨ÖÔ∏è Output: A static site that can be used as a workbench for development and deployed documentation</p>\n<p>It consumes the files and structure of your project and generates the documentation based on this.\nIn development mode the output is regenerated on file change and synced to the browser.\nThis provides you with a development environment for creating the components, prototyping and writing the docs.</p>\n<h3 id=\"%F0%9F%92%AF-main-features\" tabindex=\"-1\">üíØ Main features</h3>\n<ul>\n<li><strong>Templating agnostic</strong>:\nVarious templating engines are integrated via adapters.\nThis gives you flexibility of choice and the option to integrate custom ones.\nIt works with whatever can be rendered via JavaScript, e.g. JSX, Vue, EJS, Pug/Jade, Handlebars.</li>\n<li><strong>Prototyping environment</strong>:\nBuild your UI without the need for an existing backend/API.\nRender your templates and components with mock data.\nBuild various variants for pages by providing different data to your views.</li>\n<li><strong>Best practice approach</strong>:\nThe tool guides you towards best practices like\n<a href=\"https://medium.com/styled-components/component-folder-pattern-ee42df37ec68\">the component folder pattern</a>,\n<a href=\"https://css-tricks.com/key-building-large-javascript-apps-modlet-workflow/\">the modlet workflow</a>\nand by proposing a separation of data and template/component.</li>\n<li><strong>In sync with the end product</strong>:\nThe docs are generated from the code that is used in your application.\nHence you get a living pattern library ‚Äì¬†not a separate thing that needs to be looked after regularly.</li>\n<li><strong>Flexible integrations</strong>:\nTemplating engines can be configured so you can fit it to your needs.\nSame goes for the markdown parsing/rendering which is configurable too.</li>\n<li><strong>Covers green- and brownfield projects</strong>:\nWhether you start out with a pattern library or want to transition your process and refactor your existing UI into modular components, the UIengine has you covered.</li>\n</ul>\n<p>For the evaluation process you might also want to have a look at the <a href=\"#-alternatives\">alternatives</a>.</p>\n<h3 id=\"%F0%9F%97%9C-prerequisites\" tabindex=\"-1\">üóú Prerequisites</h3>\n<p>UIengine requires at least Node.js 14.16 (tracking the latest active Node.js LTS version).\nThis guarantees a reasonable level of backwards compatibility.</p>\n<h3 id=\"%F0%9F%96%96-alternatives\" tabindex=\"-1\">üññ Alternatives</h3>\n<p>OK, the UIengine looks really cool but it‚Äôs not quite what you are looking for?\nOr you want to first compare a few solutions to see which one is the right fit?\nHere are some other projects that you might want to evaluate:</p>\n<ul>\n<li><a href=\"https://storybook.js.org/\">Storybook</a></li>\n<li><a href=\"http://patternlab.io/\">Pattern Lab</a></li>\n<li>or have a look at <a href=\"https://github.com/davidhund/styleguide-generators\">the ever growing list of similar tools</a>.</li>\n</ul>\n<h2 id=\"%F0%9F%9B%A0-development\" tabindex=\"-1\">üõ† Development</h2>\n<p>You like this project and are interested in participating?\nSee the <a href=\"https://uiengine.uix.space/development/contributing/\">development docs</a> for an introduction and workflows when hacking on the UIengine.</p>\n<h2 id=\"%E2%9C%A8-contributors\" tabindex=\"-1\">‚ú® Contributors</h2>\n<p>Thanks goes to these wonderful people:</p>\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://www.persiel.com\"><img src=\"https://avatars2.githubusercontent.com/u/6762951?v=4\" width=\"100px;\" alt=\"Jan Persiel\"/><br /><sub><b>Jan Persiel</b></sub></a><br /><a href=\"#design-janpersiel\" title=\"Design\">üé®</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/Cos_Anca\"><img src=\"https://avatars1.githubusercontent.com/u/4587864?v=4\" width=\"100px;\" alt=\"Cos Anca\"/><br /><sub><b>Cos Anca</b></sub></a><br /><a href=\"#design-cosanca\" title=\"Design\">üé®</a> <a href=\"https://github.com/dennisreimann/uiengine/commits?author=CosAnca\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"http://geers.tv\"><img src=\"https://avatars3.githubusercontent.com/u/152287?v=4\" width=\"100px;\" alt=\"Michael Geers\"/><br /><sub><b>Michael Geers</b></sub></a><br /><a href=\"https://github.com/dennisreimann/uiengine/commits?author=naltatis\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://modo.md\"><img src=\"https://avatars0.githubusercontent.com/u/858428?v=4\" width=\"100px;\" alt=\"Matteo Fogli\"/><br /><sub><b>Matteo Fogli</b></sub></a><br /><a href=\"https://github.com/dennisreimann/uiengine/commits?author=therealpecus\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://jonas-havers.de\"><img src=\"https://avatars3.githubusercontent.com/u/1322093?v=4\" width=\"100px;\" alt=\"Jonas Havers\"/><br /><sub><b>Jonas Havers</b></sub></a><br /><a href=\"https://github.com/dennisreimann/uiengine/commits?author=JonasHavers\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://www.lost-in-technology.com/blog/\"><img src=\"https://avatars0.githubusercontent.com/u/17713179?v=4\" width=\"100px;\" alt=\"Ren√© M√§keler\"/><br /><sub><b>Ren√© M√§keler</b></sub></a><br /><a href=\"#example-MrAvantiC\" title=\"Examples\">üí°</a></td>\n  </tr>\n</table>\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n<p>This project follows the <a href=\"https://github.com/all-contributors/all-contributors\">all-contributors</a> specification.\nContributions of any kind welcome!</p>\n<hr>\n<p>üë®üèª‚Äçüíª Brought to you by the nice people behind <a href=\"https://uiengineering.de\">UIengineering</a>. üë®üèª‚Äçüíª</p>",
      "files": [
        "/home/runner/work/uiengine/uiengine/docs/site/card.png",
        "/home/runner/work/uiengine/uiengine/docs/site/favicon.ico",
        "/home/runner/work/uiengine/uiengine/docs/site/uiengine.png",
        "/home/runner/work/uiengine/uiengine/docs/site/images/logo.svg",
        "/home/runner/work/uiengine/uiengine/docs/site/images/uiengine-logo.png",
        "/home/runner/work/uiengine/uiengine/docs/site/styles/docs.css"
      ]
    },
    "adapters": {
      "childIds": [
        "adapters/css",
        "adapters/ejs",
        "adapters/handlebars",
        "adapters/html",
        "adapters/marko",
        "adapters/nunjucks",
        "adapters/pug",
        "adapters/react",
        "adapters/vue",
        "adapters/webpack"
      ],
      "id": "adapters",
      "title": "Adapters",
      "isTitleFromHeading": true,
      "path": "adapters",
      "sourcePath": "site/adapters",
      "readmeFile": "site/adapters/README.md",
      "type": "documentation",
      "content": "<h1 id=\"adapters\" tabindex=\"-1\">Adapters</h1>\n<p>UIengine supports multiple templating engines by abstracting them with adapters.\nThis offers a templating language agnostic way for rendering and additional functionality.</p>\n<p>Adapters are registered for a particular file extension.\nUIengine will <code>require</code> an adapter when it needs to process a file with the given extension.</p>\n<p>You configure the adapters for your project in the <a href=\"/basics/config/#adapters\">project configuration file</a>,\nusing the file extension as the adapter key:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>\n  }\n}\n</code></pre>\n<p>You can also provide a set of adapter specifict options ‚Äì¬†see the individual adapters documentation for details:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">pretty</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">basedir</span>: <span class=\"hljs-string\">&#x27;./src/components&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>See the list of available adapters¬†‚Äì either to find an existing one or for a starting point to create a custom one:</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/search?q=uiengine-adapter\">NPM</a></li>\n<li><a href=\"https://github.com/dennisreimann/uiengine/tree/master/packages\">GitHub: Core</a></li>\n<li><a href=\"https://github.com/search?q=topic%3Auiengine-adapter&amp;type=Repositories\">GitHub: Third-Party</a></li>\n</ul>\n<h2 id=\"adapter-modules\" tabindex=\"-1\">Adapter Modules</h2>\n<p>An adapter module has to export at least a <code>render</code> function.\nIn addition to that there are more optional hook functions, like <code>setup</code> and <code>registerComponentFile</code>.\nThere are also optional hooks for <a href=\"#scaffolding\">scaffolding new components and variants</a>.</p>\n<p><strong>Note:</strong> All of these functions are expected to work asynchronously and should return a Promise.</p>\n<h3 id=\"functions\" tabindex=\"-1\">Functions</h3>\n<p>All the functions get called with the adapter options that are defined in the adapter config.\nThis set of <code>opts</code> is also extended with the following properties:</p>\n<ul>\n<li><code>components</code>: The absolute path of the components directory referenced in the <a href=\"/basics/config/#sources\"><code>config.sources.components</code></a> property.</li>\n<li><code>templates</code>: The absolute path of the templates directory referenced in the <a href=\"/basics/config/#sources\"><code>config.sources.templates</code></a> property.</li>\n<li><code>target</code>: The absolute path of the target directory referenced in the <a href=\"/basics/config/#target\"><code>config.target</code></a> property.</li>\n<li><code>ext</code>: The file extension of the adapter.</li>\n</ul>\n<h4 id=\"render(opts%2C-filepath%2C-data)\" tabindex=\"-1\"><code>render(opts, filePath, data)</code></h4>\n<p>This function should render the file at <code>filePath</code> with the given <code>data</code> and return the rendered output.</p>\n<ul>\n<li><code>opts</code> are the extended adapter options explained above.\nIn addition to the custom options that are provided via the config, these are also present:\n<ul>\n<li><code>ext</code> as the file extension</li>\n<li><code>base</code>, <code>components</code>, <code>templates</code> from the sources config, as well as <code>target</code></li>\n<li><code>themeIds</code> and the current <code>themeId</code></li>\n</ul>\n</li>\n<li><code>filePath</code> is the absolute path of the file that should be rendered.</li>\n<li><code>data</code> is the <code>context</code> that is provided via the\n<a href=\"/basics/variant/\">variant metadata</a> or for\n<a href=\"/basics/page/#templates\">pages with custom templates</a>.</li>\n</ul>\n<p>The return value can either be a string of HTML or a structured object containing the <code>rendered</code> HTML and an optional <code>foot</code>:</p>\n<ul>\n<li>\n<p>String:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>rendered html<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n</li>\n<li>\n<p>Object:</p>\n<pre class=\"hljs lang-json\"><code>{\n  rendered: &quot;&lt;div&gt;rendered html&lt;/div&gt;&quot;,\n  foot:\n}\n</code></pre>\n<ul>\n<li><code>rendered</code> is required and is used to display the preview</li>\n<li><code>foot</code> optional client side rendering code that gets injected (script tag including the code)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"setup(opts)\" tabindex=\"-1\"><code>setup(opts)</code></h4>\n<p>This function is called before the project gets generated.\nYou can use this hook to e.g. <a href=\"https://github.com/dennisreimann/uiengine/tree/master/packages/adapter-handlebars/src/index.js\">register partials when working with Handlebars</a>.</p>\n<h4 id=\"registercomponentfile(opts%2C-filepath)\" tabindex=\"-1\"><code>registerComponentFile(opts, filePath)</code></h4>\n<p>This function gets called for each component file, which has an associated adapter.\nUse this function to generate documentation from your components, e.g. extract properties from React PropTypes.</p>\n<p>When generating incremental changes during development you can also use this to update the registered component files.</p>\n<h3 id=\"scaffolding\" tabindex=\"-1\">Scaffolding</h3>\n<p>Adapters can also provide async functions to be used when scaffolding components and variants:</p>\n<ul>\n<li><code>filesForComponent(opts, componentName)</code></li>\n<li><code>filesForVariant(opts, componentName, variantName)</code></li>\n</ul>\n<p>Both functions should resolve with an array containing information about the files that need to be created.\nFor each file the array should contain an object providing a <code>basename</code> and <code>data</code>.</p>\n<p>Here is an example from the <a href=\"https://github.com/dennisreimann/uiengine/tree/master/packages/adapter-pug/src/index.js\">Pug adapter</a>:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> filesForComponent = <span class=\"hljs-function\">(<span class=\"hljs-params\">opts, componentName</span>) =&gt;</span>\n  [\n    {\n      <span class=\"hljs-attr\">basename</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${componentName}</span>.pug`</span>,\n      <span class=\"hljs-attr\">data</span>: <span class=\"hljs-string\">`mixin <span class=\"hljs-subst\">${componentName}</span>()\\n  .<span class=\"hljs-subst\">${componentName}</span>\\n    //- TODO: implement`</span>\n    }\n  ]\n\n<span class=\"hljs-keyword\">const</span> filesForVariant = <span class=\"hljs-function\">(<span class=\"hljs-params\">opts, componentName, variantName</span>) =&gt;</span>\n  [\n    {\n      <span class=\"hljs-attr\">basename</span>: <span class=\"hljs-string\">`<span class=\"hljs-subst\">${variantName}</span>.pug`</span>,\n      <span class=\"hljs-attr\">data</span>: <span class=\"hljs-string\">`+<span class=\"hljs-subst\">${componentName}</span>()`</span>\n    }\n  ]\n</code></pre>\n<p>To skip scaffolding for certain adapters, provide the <code>skipScaffold</code> option in the adapter configuration:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">skipScaffold</span>: <span class=\"hljs-literal\">true</span>\n      }\n    }\n  }\n}\n</code></pre>"
    },
    "advanced": {
      "childIds": [
        "advanced/deployment",
        "advanced/design-tokens",
        "advanced/integrations",
        "advanced/plugins",
        "advanced/properties",
        "advanced/ui"
      ],
      "title": "Advanced",
      "id": "advanced",
      "path": "advanced",
      "sourcePath": "site/advanced",
      "sourceFile": "site/advanced/page.config.js",
      "type": "documentation"
    },
    "basics": {
      "childIds": [
        "basics/getting-started",
        "basics/config",
        "basics/component",
        "basics/variant",
        "basics/page"
      ],
      "id": "basics",
      "title": "Basics",
      "isTitleFromHeading": false,
      "path": "basics",
      "sourcePath": "site/basics",
      "sourceFile": "site/basics/page.config.js",
      "type": "documentation"
    },
    "development": {
      "childIds": [
        "development/changelog",
        "development/code-of-conduct",
        "development/contributing"
      ],
      "title": "Development",
      "id": "development",
      "path": "development",
      "sourcePath": "site/development",
      "sourceFile": "site/development/page.config.js",
      "type": "documentation"
    },
    "adapters/css": {
      "childIds": [],
      "id": "adapters/css",
      "title": "CSS",
      "isTitleFromHeading": true,
      "path": "adapters/css",
      "sourcePath": "site/adapters/css",
      "readmeFile": "site/adapters/css/README.md",
      "type": "documentation",
      "content": "<h1 id=\"css\" tabindex=\"-1\">CSS</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-css\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-css.svg\" alt=\"npm\"></a></figure>\n<p>This adapter parses css files for custom properties.\nYou can use it to display theme settings for your components.\nThe adapter extracts css variables and constructs a data structure that gets displayed in the UI.</p>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">css</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-css&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">css</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-css&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">componentThemesDir</span>: <span class=\"hljs-string\">&#x27;themes&#x27;</span>, <span class=\"hljs-comment\">// &#x27;themes&#x27; is the default</span>\n        <span class=\"hljs-attr\">globalThemesDir</span>: <span class=\"hljs-string\">&#x27;./src/styles/themes&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>The <code>componentThemesDir</code> option is the directory name of the component custom properties (defaults to ‚Äúthemes‚Äù).\nThe <code>globalThemesDir</code> option is the path to the directory containing the app-wide custom properties (optional).</p>\n<h2 id=\"example\" tabindex=\"-1\">Example</h2>\n<p>File structure:</p>\n<pre class=\"hljs lang-tree\"><code>src\n|___styles\n|   |___themes              &lt;- globalThemesDir\n|   |   |___funky.css\n|   |   |___plain.css\n|   |___app.css\n|___components\n    |___button\n        |___themes          &lt;- componentThemesDir\n        |   |___funky.css\n        |   |___plain.css\n        |___button.css\n</code></pre>\n<p>See the <a href=\"https://github.com/dennisreimann/uiengine/tree/master/test/project/src\">test project</a> for an example of the file contents.</p>\n<p>For an example of the output have a look at the ‚ÄúThemes‚Äù tab of the <a href=\"https://uiengine.uix.space/test-project/patterns/atoms/label/\">label component sample</a>.</p>"
    },
    "adapters/ejs": {
      "childIds": [],
      "id": "adapters/ejs",
      "title": "EJS",
      "isTitleFromHeading": true,
      "path": "adapters/ejs",
      "sourcePath": "site/adapters/ejs",
      "readmeFile": "site/adapters/ejs/README.md",
      "type": "documentation",
      "content": "<h1 id=\"ejs\" tabindex=\"-1\">EJS</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-ejs\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-ejs.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">ejs</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-ejs&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">ejs</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-ejs&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">true</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>The options are passed to the <a href=\"https://www.npmjs.com/package/ejs#options\">EJS renderer</a>.</p>\n<p>In addition to that there is the option <code>debug</code> for a more detailed output in case of rendering errors.</p>"
    },
    "adapters/handlebars": {
      "childIds": [],
      "id": "adapters/handlebars",
      "title": "Handlebars",
      "isTitleFromHeading": true,
      "path": "adapters/handlebars",
      "sourcePath": "site/adapters/handlebars",
      "readmeFile": "site/adapters/handlebars/README.md",
      "type": "documentation",
      "content": "<h1 id=\"handlebars\" tabindex=\"-1\">Handlebars</h1>\n<p>üö¶ <em>State:</em> Proof of concept</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-handlebars\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-handlebars.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">hbs</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-hbs&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">hbs</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-handlebars&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">namespace</span>: <span class=\"hljs-string\">&#x27;myapp&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>Available options:</p>\n<ul>\n<li><code>namespace</code> prefixes partials with the given namespace and a slash: <code>myapp/component</code></li>\n</ul>\n<p>In addition to that there is the option <code>debug</code> for a more detailed output in case of rendering errors.</p>"
    },
    "adapters/html": {
      "childIds": [],
      "id": "adapters/html",
      "title": "HTML",
      "isTitleFromHeading": true,
      "path": "adapters/html",
      "sourcePath": "site/adapters/html",
      "readmeFile": "site/adapters/html/README.md",
      "type": "documentation",
      "content": "<h1 id=\"html\" tabindex=\"-1\">HTML</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-html\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-html.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-html&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">html</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-html&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">basedir</span>: <span class=\"hljs-string\">&#x27;./src/components&#x27;</span>,\n        <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">true</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>The <code>basedir</code> option allows for referencing includes with an absolute path.</p>\n<p>In addition to that there is the option <code>debug</code> for a more detailed output in case of rendering errors.</p>\n<h2 id=\"variables\" tabindex=\"-1\">Variables</h2>\n<p>You can reference variables with the JavaScript template literal syntax:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>${myData.variable}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>Given the context <code>{ myData: { variable: 'Test' } }</code> this would render like</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<h2 id=\"includes\" tabindex=\"-1\">Includes</h2>\n<p>You can include other html templates/components using the <a href=\"https://www.w3.org/Jigsaw/Doc/User/SSI.html#include\">SSI include command</a>:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--#include file=&quot;header.html&quot; --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>main content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--#include file=&quot;footer.html&quot; --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n</code></pre>\n<p>Variables and includes can also be combined:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!--#include file=&quot;${myIncludeFile}&quot; --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n</code></pre>"
    },
    "adapters/marko": {
      "childIds": [],
      "id": "adapters/marko",
      "title": "Marko",
      "isTitleFromHeading": true,
      "path": "adapters/marko",
      "sourcePath": "site/adapters/marko",
      "readmeFile": "site/adapters/marko/README.md",
      "type": "documentation",
      "content": "<h1 id=\"marko\" tabindex=\"-1\">Marko</h1>\n<p>üö¶ <em>State:</em> Proof of concept</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-marko\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-marko.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">marko</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-marko&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">marko</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-marko&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">install</span>: {\n          <span class=\"hljs-comment\">// default marko config options that get passed to</span>\n          <span class=\"hljs-comment\">// `require(&#x27;marko/node-require&#x27;).install()`</span>\n          <span class=\"hljs-attr\">compilerOptions</span>: {\n            <span class=\"hljs-attr\">writeToDisk</span>: <span class=\"hljs-literal\">true</span>\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>The <code>debug</code> option allows for a more detailed output in case of rendering errors.</p>"
    },
    "adapters/nunjucks": {
      "childIds": [],
      "id": "adapters/nunjucks",
      "title": "Nunjucks",
      "isTitleFromHeading": true,
      "path": "adapters/nunjucks",
      "sourcePath": "site/adapters/nunjucks",
      "readmeFile": "site/adapters/nunjucks/README.md",
      "type": "documentation",
      "content": "<h1 id=\"nunjucks\" tabindex=\"-1\">Nunjucks</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-nunjucks\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-nunjucks.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">njk</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-nunjucks&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">njk</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-nunjucks&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">trimBlocks</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">lstripBlocks</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">noCache</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">globals</span>: {\n          <span class=\"hljs-attr\">time</span>: <span class=\"hljs-function\">() =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime()\n          }\n        },\n        <span class=\"hljs-attr\">filters</span>: {\n          <span class=\"hljs-attr\">shorten</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">str, count</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> str.slice(<span class=\"hljs-number\">0</span>, count || <span class=\"hljs-number\">5</span>)\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>The options are passed to the <a href=\"https://mozilla.github.io/nunjucks/api.html#environment\">Nunjucks Environment</a>.</p>\n<p>In addition to that there are other options that allows for setting a custom Loader (passing a <code>loader</code> object into the options) or a custom Environment (passing an <code>env</code> object in the options), as well as adding custom Globals or custom Filters, as per the example above.</p>\n<p>If you‚Äôd like to be able to use the custom globals or custom filters in the base templates, ensure you pass a <code>searchPaths</code> array into the options that includes all the paths where your Nunjucks files can be found, including the template files.</p>"
    },
    "adapters/pug": {
      "childIds": [],
      "id": "adapters/pug",
      "title": "Pug",
      "isTitleFromHeading": true,
      "path": "adapters/pug",
      "sourcePath": "site/adapters/pug",
      "readmeFile": "site/adapters/pug/README.md",
      "type": "documentation",
      "content": "<h1 id=\"pug\" tabindex=\"-1\">Pug</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-pug\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-pug.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">pretty</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">basedir</span>: <span class=\"hljs-string\">&#x27;./src/components&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>For available options see the <a href=\"https://pugjs.org/api/reference.html#options\">Pug options reference</a>.</p>\n<p>In addition to that there is the option <code>debug</code> for a more detailed output in case of rendering errors.</p>"
    },
    "adapters/react": {
      "childIds": [],
      "id": "adapters/react",
      "title": "React",
      "isTitleFromHeading": true,
      "path": "adapters/react",
      "sourcePath": "site/adapters/react",
      "readmeFile": "site/adapters/react/README.md",
      "type": "documentation",
      "content": "<h1 id=\"react\" tabindex=\"-1\">React</h1>\n<p>üö¶ <em>State:</em> Deprecated, please use the <a href=\"/adapters/webpack/\">Webpack adapter</a>.</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-react\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-react.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">jsx</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-react&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">jsx</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-react&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-comment\">// the babel register module that is used.</span>\n        <span class=\"hljs-comment\">// (default: &#x27;@babel/register&#x27;)</span>\n        <span class=\"hljs-attr\">babelRegisterModule</span>: <span class=\"hljs-string\">&#x27;@babel/register&#x27;</span>,\n        <span class=\"hljs-comment\">// babel options that get passed to</span>\n        <span class=\"hljs-comment\">// `require(&#x27;@babel/register&#x27;)()</span>\n        <span class=\"hljs-comment\">// (default: none)</span>\n        <span class=\"hljs-attr\">babel</span>: {\n          <span class=\"hljs-attr\">presets</span>: [<span class=\"hljs-string\">&#x27;@babel/preset-env&#x27;</span>, <span class=\"hljs-string\">&#x27;@babel/preset-react&#x27;</span>],\n          <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-string\">&#x27;css-modules-transform&#x27;</span>]\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>The <code>debug</code> option allows for a more detailed output in case of rendering errors.</p>\n<h2 id=\"hooks-and-extension\" tabindex=\"-1\">Hooks and Extension</h2>\n<p>In case this adapter does not fully meet your needs you can customize and extend it.</p>\n<p>For instance it offers these hook functions which can be overwritten:</p>\n<ul>\n<li><code>wrapElementBeforeRender(Element, filePath, data)</code></li>\n<li><code>wrapHtmlAfterRender(html, filePath, data)</code></li>\n</ul>\n<p>To do so, define your own adapter which imports this one and overrides the functions that need customization:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> ReactAdapter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;@uiengine/adapter-react&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { readFileSync } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { resolve, join } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { createElement } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;react&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { MyContext, MY_CONTEXT_VALUE } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../routes&#x27;</span>)\n\n<span class=\"hljs-comment\">// wrap all components and templates in a context provider.</span>\nReactAdapter.wrapElementBeforeRender = <span class=\"hljs-function\">(<span class=\"hljs-params\">Element, filePath, data</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">props, children</span>) =&gt;</span>\n    createElement(MyContext.Provider, {\n  ¬†¬†  <span class=\"hljs-attr\">value</span>: MY_CONTEXT_VALUE,\n      <span class=\"hljs-attr\">children</span>: createElement(Element, props, children)\n    })\n}\n\n<span class=\"hljs-comment\">// wrap all templates in the preview templates to provide the full html page.</span>\n<span class=\"hljs-keyword\">const</span> templatesPath = resolve(__dirname, <span class=\"hljs-string\">&#x27;..&#x27;</span>, <span class=\"hljs-string\">&#x27;templates&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> templatePath = join(templatesPath, <span class=\"hljs-string\">&#x27;uiengine.html&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> template = readFileSync(templatePath, <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>)\n\nReactAdapter.wrapHtmlAfterRender = <span class=\"hljs-function\">(<span class=\"hljs-params\">html, filePath, data</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">if</span> (filePath.startsWith(templatesPath)) {\n    <span class=\"hljs-keyword\">let</span> wrapped = template\n    wrapped = wrapped.replace(<span class=\"hljs-string\">`&lt;!-- uiengine:class --&gt;`</span>, data.class)\n    wrapped = wrapped.replace(<span class=\"hljs-string\">`&lt;!-- uiengine:title --&gt;`</span>, data.title)\n    wrapped = wrapped.replace(<span class=\"hljs-string\">`&lt;!-- uiengine:content --&gt;`</span>, html)\n    <span class=\"hljs-keyword\">return</span> wrapped\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> html\n  }\n}\n\n<span class=\"hljs-built_in\">module</span>.exports = ReactAdapter\n</code></pre>"
    },
    "adapters/vue": {
      "childIds": [],
      "id": "adapters/vue",
      "title": "Vue",
      "isTitleFromHeading": true,
      "path": "adapters/vue",
      "sourcePath": "site/adapters/vue",
      "readmeFile": "site/adapters/vue/README.md",
      "type": "documentation",
      "content": "<h1 id=\"vue\" tabindex=\"-1\">Vue</h1>\n<p>üö¶ <em>State:</em> Deprecated, please use the <a href=\"/adapters/webpack/\">Webpack adapter</a>.</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-vue\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-vue.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>Plain and simple:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">vue</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-vue&#x27;</span>\n  }\n}\n</code></pre>\n<p>With options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">vue</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-vue&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">bundle</span>: <span class=\"hljs-string\">&#x27;/absolute-path-to/server-side-bundle.js&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>The <code>debug</code> option allows for a more detailed output in case of rendering errors.</p>\n<p>The <code>bundle</code> option should be the absolute path to a module that exports a factory function for new Vue instances.\nThis function should accepts an object with options that are passed into the new Vue instance:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createApp</span> (<span class=\"hljs-params\">options = {}</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> opts = <span class=\"hljs-built_in\">Object</span>.assign({\n    <span class=\"hljs-comment\">// provide all components that are needed for variant previews</span>\n    <span class=\"hljs-attr\">components</span>: {\n      MyLabel,\n      MyInput,\n      MyEtcetera\n    }\n  }, options)\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Vue(opts)\n}\n</code></pre>\n<p>See the <a href=\"../../test/project/src/vue\">sample project vue folder</a> for examples.</p>"
    },
    "adapters/webpack": {
      "childIds": [],
      "id": "adapters/webpack",
      "title": "Webpack",
      "isTitleFromHeading": true,
      "path": "adapters/webpack",
      "sourcePath": "site/adapters/webpack",
      "readmeFile": "site/adapters/webpack/README.md",
      "type": "documentation",
      "content": "<h1 id=\"webpack\" tabindex=\"-1\">Webpack</h1>\n<p>üö¶ <em>State:</em> Production ready</p>\n<figure><a href=\"https://www.npmjs.com/package/@uiengine/adapter-webpack\"><img src=\"https://img.shields.io/npm/v/@uiengine/adapter-webpack.svg\" alt=\"npm\"></a></figure>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>This adapter needs the following options:</p>\n<ul>\n<li><code>serverConfig</code>: The Webpack config for server-side rendering</li>\n<li><code>serverRenderPath</code>: Path to file containing the server-side rendering code</li>\n<li><code>clientConfig</code>: The Webpack config for client-side rendering</li>\n<li><code>clientRenderPath</code>: Path to file containing the client-side rendering code</li>\n<li><code>properties</code>: Optional property extraction handler (options: <code>prop-types</code>, <code>vue</code>)</li>\n<li><code>filesForComponent</code> and <code>filesForVariant</code>: See the <a href=\"../#scaffolding\">adapter scaffolding docs</a> and the test project files for\n<a href=\"https://github.com/dennisreimann/uiengine/blob/master/test/project/lib/react-scaffolding.js\">React</a> and\n<a href=\"https://github.com/dennisreimann/uiengine/blob/master/test/project/lib/vue-scaffolding.js\">Vue</a>.</li>\n<li><code>debug</code>: Display action logging and timing information</li>\n</ul>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">vue</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-webpack&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./vue-adapter-options&#x27;</span>)\n    },\n    <span class=\"hljs-attr\">jsx</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-webpack&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./react-adapter-options&#x27;</span>)\n    }\n  }\n}\n</code></pre>\n<p>See the <a href=\"https://github.com/dennisreimann/uiengine/tree/master/test/project/\">test project</a> <code>lib</code> and <code>webpack</code> folder for full details on how to configure the adapter.</p>\n<p>Note: This feature requires the <code>&lt;!-- uiengine:foot --&gt;</code> comment to be present in the template.</p>\n<h3 id=\"webpack-build\" tabindex=\"-1\">Webpack build</h3>\n<p>The adapter builds the components/variants by merging your Webpack configuration with some custom additions.\nFor instance you can use the <code>process.env.target</code> variable provided by the <code>DefinePlugin</code> to check whether rendering occurs on the <code>server</code> or <code>client</code>:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">if</span> (process.env.target === <span class=\"hljs-string\">&#x27;client&#x27;</span>) <span class=\"hljs-built_in\">window</span>.doSomething()\n</code></pre>\n<p>The build output is stored in the <code>${config.target}/_webpack</code> directory.</p>\n<h3 id=\"options-for-vue\" tabindex=\"-1\">Options for Vue</h3>\n<p>The <code>vue-adapter-options.js</code> file required above might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { resolve } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)\n\n<span class=\"hljs-comment\">// this depends on how you handle your webpack config:</span>\n<span class=\"hljs-comment\">// in this case it exports an array of configs, bur you</span>\n<span class=\"hljs-comment\">// might as well import them from separate files.</span>\n<span class=\"hljs-keyword\">const</span> [clientConfig, serverConfig] = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./webpack.conf&#x27;</span>)\n\n<span class=\"hljs-comment\">// see file contents below</span>\n<span class=\"hljs-keyword\">const</span> serverRenderPath = resolve(__dirname, <span class=\"hljs-string\">&#x27;vue-server-render.js&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> clientRenderPath = resolve(__dirname, <span class=\"hljs-string\">&#x27;vue-client-render.js&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> properties = <span class=\"hljs-string\">&#x27;vue&#x27;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  serverConfig,\n  clientConfig,\n  serverRenderPath,\n  clientRenderPath,\n  properties\n}\n</code></pre>\n<p>For details on the <code>filesForComponent</code> and <code>filesForVariant</code> options see the\n<a href=\"../#scaffolding\">adapter scaffolding docs</a> and the accompanying\n<a href=\"https://github.com/dennisreimann/uiengine/blob/master/test/project/lib/vue-scaffolding.js\">test project file</a>.</p>\n<p>The <code>vue-server-render.js</code> file might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> Vue = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;vue&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { createRenderer } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;vue-server-renderer&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> renderer = createRenderer({\n  <span class=\"hljs-attr\">template</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">result, context</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> state = context.renderState()\n    <span class=\"hljs-keyword\">const</span> styles = context.renderStyles()\n    <span class=\"hljs-keyword\">const</span> scripts = context.renderScripts()\n\n    <span class=\"hljs-keyword\">return</span> styles + result + state + scripts\n  }\n})\n\n<span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">serverRender</span> (<span class=\"hljs-params\">Component, props</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> renderer.renderToString(\n    <span class=\"hljs-keyword\">new</span> Vue({\n      render (h) {\n        <span class=\"hljs-keyword\">return</span> h(Component, { props })\n      }\n    }), { <span class=\"hljs-attr\">state</span>: props }\n  )\n}\n</code></pre>\n<p>The <code>vue-client-render.js</code> file might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">clientRender</span> (<span class=\"hljs-params\">Component, props</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Vue({\n    <span class=\"hljs-attr\">el</span>: <span class=\"hljs-string\">&#x27;#app&#x27;</span>, <span class=\"hljs-comment\">// your app container selector defined in the uiengine preview template</span>\n    render (h) {\n      <span class=\"hljs-keyword\">return</span> h(Component, { props })\n    }\n  })\n}\n</code></pre>\n<h3 id=\"options-for-react\" tabindex=\"-1\">Options for React</h3>\n<p>The <code>react-adapter-options.js</code> file required above might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { resolve } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)\n\n<span class=\"hljs-comment\">// this depends on how you handle your webpack config:</span>\n<span class=\"hljs-comment\">// in this case it exports an array of configs, bur you</span>\n<span class=\"hljs-comment\">// might as well import them from separate files.</span>\n<span class=\"hljs-keyword\">const</span> [clientConfig, serverConfig] = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./webpack.conf&#x27;</span>)\n\n<span class=\"hljs-comment\">// see file contents below</span>\n<span class=\"hljs-keyword\">const</span> serverRenderPath = resolve(__dirname, <span class=\"hljs-string\">&#x27;react-server-render.js&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> clientRenderPath = resolve(__dirname, <span class=\"hljs-string\">&#x27;react-client-render.js&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> properties = <span class=\"hljs-string\">&#x27;prop-types&#x27;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  serverConfig,\n  clientConfig,\n  serverRenderPath,\n  clientRenderPath,\n  properties\n}\n</code></pre>\n<p>For details on the <code>filesForComponent</code> and <code>filesForVariant</code> options see the\n<a href=\"../#scaffolding\">adapter scaffolding docs</a> and the accompanying\n<a href=\"https://github.com/dennisreimann/uiengine/blob/master/test/project/lib/react-scaffolding.js\">test project file</a>.</p>\n<p>The <code>react-server-render.js</code> file might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { renderToString } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;react-dom/server&#x27;</span>)\n\n<span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">serverRender</span> (<span class=\"hljs-params\">Component, props</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> renderToString(Component(props))\n}\n</code></pre>\n<p>The <code>react-client-render.js</code> file might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react-dom&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">clientRender</span> (<span class=\"hljs-params\">Component, props</span>) </span>{\n  ReactDOM.hydrate(\n    React.createElement(Component, props),\n    <span class=\"hljs-built_in\">document</span>.querySelector(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)  <span class=\"hljs-comment\">// your app container defined in the uiengine preview template</span>\n  )\n}\n</code></pre>"
    },
    "advanced/deployment": {
      "childIds": [],
      "id": "advanced/deployment",
      "title": "Deployment",
      "isTitleFromHeading": true,
      "path": "advanced/deployment",
      "sourcePath": "site/advanced/deployment",
      "readmeFile": "site/advanced/deployment/README.md",
      "type": "documentation",
      "content": "<h1 id=\"deployment\" tabindex=\"-1\">Deployment</h1>\n<p>As the output is a single-page website, the deployment requires some server configuration.</p>\n<p>Without a proper server configuration, the users will get a 404 error if they access pages ther than the homepage directly in their browser.\nTo fix the issue, all you need to do is add a simple catch-all fallback route to your server.\nIf the URL doesn‚Äôt match any static assets, it should serve the same index.html page that your UIengine output lives in.</p>\n<p>Here you can find some examples.</p>\n<h2 id=\"nginx\" tabindex=\"-1\">nginx</h2>\n<pre class=\"hljs lang-nginx\"><code><span class=\"hljs-attribute\">location</span> / {\n  <span class=\"hljs-attribute\">try_files</span> $uri $uri/ /index.html;\n}\n</code></pre>\n<h2 id=\"apache\" tabindex=\"-1\">Apache</h2>\n<pre class=\"hljs lang-apache\"><code>&lt;IfModule mod_rewrite.c&gt;\n  RewriteEngine On\n  RewriteBase /\n  RewriteRule ^index\\.html$ - [L]\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule . /index.html [L]\n&lt;/IfModule&gt;\n</code></pre>\n<h2 id=\"express-with-node.js\" tabindex=\"-1\">Express with Node.js</h2>\n<p>For Node.js/Express, consider using <a href=\"https://github.com/bripkens/connect-history-api-fallback\">connect-history-api-fallback</a> middleware.</p>\n<h2 id=\"native-node.js\" tabindex=\"-1\">Native Node.js</h2>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { createServer } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;http&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> { readFile } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> PORT = <span class=\"hljs-number\">80</span>\n\ncreateServer(<span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  readFile(<span class=\"hljs-string\">&#x27;index.html&#x27;</span>, <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, content</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (err) {\n      <span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">&#x27;Cannot open &quot;index.html&quot; file.&#x27;</span>)\n    }\n\n    res.writeHead(<span class=\"hljs-number\">200</span>, {\n      <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: <span class=\"hljs-string\">&#x27;text/html; charset=utf-8&#x27;</span>\n    })\n\n    res.end(content)\n  })\n}).listen(PORT, <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Server listening on: http://localhost:%s&#x27;</span>, PORT)\n})\n</code></pre>"
    },
    "advanced/design-tokens": {
      "childIds": [],
      "id": "advanced/design-tokens",
      "title": "Design Tokens",
      "isTitleFromHeading": true,
      "path": "advanced/design-tokens",
      "sourcePath": "site/advanced/design-tokens",
      "readmeFile": "site/advanced/design-tokens/README.md",
      "type": "documentation",
      "content": "<h1 id=\"design-tokens\" tabindex=\"-1\">Design Tokens</h1>\n<p>The UIengine interface includes templates for displaying various types of design tokens.</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction 02: Config, Pages and Design Tokens\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2&index=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"tokens-definition\" tabindex=\"-1\">Tokens definition</h2>\n<p>The design tokens are listed under the <code>tokens</code> key of a <code>page.config.js</code> file:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;size&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;S&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;.5rem&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;size&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;M&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;1rem&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;size&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;L&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;1.5rem&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;size&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;XL&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;3rem&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<p>Each token consists of the following attributes:</p>\n<ul>\n<li><code>type</code>: See <a href=\"#types\">types</a> for details</li>\n<li><code>name</code></li>\n<li><code>value</code></li>\n</ul>\n<p>These attributes are optional:</p>\n<ul>\n<li><code>variable</code>: Variable name</li>\n<li><code>reference</code>: The name of the referenced token</li>\n<li><code>description</code></li>\n<li><code>themeIds</code>: Restricts display to only the given list of theme ids. Can be used for categories and tokens.</li>\n</ul>\n<h3 id=\"types\" tabindex=\"-1\">Types</h3>\n<h4 id=\"category\" tabindex=\"-1\"><code>category</code></h4>\n<p>The tokens can also be seperated into multiple categories.</p>\n<p>The category type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The category title</li>\n<li><code>tokens</code>: A list of tokens</li>\n<li><code>id</code>: An optional ID for the container</li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Colors&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;category&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Brand&#x27;</span>,\n      <span class=\"hljs-attr\">tokens</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;brandPrimary&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;yellow&#x27;</span>\n        },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;brandSecondary&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;blue&#x27;</span>\n        }\n      ]\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;category&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Neutral&#x27;</span>,\n      <span class=\"hljs-attr\">tokens</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;neutralWhite&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;#FFF&#x27;</span>\n        },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;neutralBlack&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;#000&#x27;</span>\n        }\n      ]\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"color\" tabindex=\"-1\"><code>color</code></h4>\n<p>The color type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The color name</li>\n<li><code>value</code>: The CSS value of the color</li>\n<li><code>variable</code></li>\n<li><code>reference</code></li>\n<li><code>description</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Colors&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Brand Primary&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;yellow&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;--brand-primary&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Brand Secondary&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;blue&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;--brand-secondary&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;color&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Background&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;blue&#x27;</span>,\n      <span class=\"hljs-attr\">reference</span>: <span class=\"hljs-string\">&#x27;Brand Secondary&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"font\" tabindex=\"-1\"><code>font</code></h4>\n<p>The font type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The font name</li>\n<li><code>value</code>: The CSS to render the font</li>\n<li><code>text</code>: Optional text for the sample. Defaults to ‚ÄúThe quick brown fox jumps over the lazy dog‚Äù</li>\n<li><code>sizes</code>: Optional list of CSS font sizes. Displays the <code>text</code> in the default font size if omitted.</li>\n<li><code>description</code></li>\n<li><code>license</code></li>\n<li><code>fontweight</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Fonts&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;category&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Arial&#x27;</span>,\n      <span class=\"hljs-attr\">tokens</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;font&#x27;</span>,\n          <span class=\"hljs-attr\">fontweight</span>: <span class=\"hljs-string\">&#x27;light / 100&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;font-family: Arial; font-weight: 100;&#x27;</span>\n        },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;font&#x27;</span>,\n          <span class=\"hljs-attr\">fontweight</span>: <span class=\"hljs-string\">&#x27;regular / 400&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;font-family: Arial; font-weight: 400;&#x27;</span>\n        },\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;font&#x27;</span>,\n          <span class=\"hljs-attr\">fontweight</span>: <span class=\"hljs-string\">&#x27;bold / 800&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;font-family: Arial; font-weight: 800;&#x27;</span>\n        }\n      ]\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;category&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Lato&#x27;</span>,\n      <span class=\"hljs-attr\">tokens</span>: [\n        {\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;font&#x27;</span>,\n          <span class=\"hljs-attr\">fontweight</span>: <span class=\"hljs-string\">&#x27;regular&#x27;</span>,\n          <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;font-family: Lato;&#x27;</span>,\n          <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;Lato&#x27;</span>,\n          <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;Use wisely.&#x27;</span>,\n          <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;Just some custom sample text to show the usage of this font.&#x27;</span>,\n          <span class=\"hljs-attr\">license</span>: <span class=\"hljs-string\">&#x27;Google Fonts&#x27;</span>,\n          <span class=\"hljs-attr\">sizes</span>: [<span class=\"hljs-string\">&#x27;24px&#x27;</span>, <span class=\"hljs-string\">&#x27;18px&#x27;</span>, <span class=\"hljs-string\">&#x27;14px&#x27;</span>]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"icon\" tabindex=\"-1\"><code>icon</code></h4>\n<p>The icon type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The icon name</li>\n<li><code>value</code>: The HTML to render the icon</li>\n<li><code>usage</code>: Alternative usage info, replaces <code>value</code></li>\n<li><code>description</code></li>\n<li><code>variable</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Icons&#x27;</span>,\n  <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&#x27;grid&#x27;</span>,  <span class=\"hljs-comment\">// &#x27;grid&#x27; is default, the other option is &#x27;table&#x27;</span>\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Search&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;&lt;i class=&quot;search icon&quot;&gt;&lt;/i&gt;&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;search&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Check&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;&lt;i class=&quot;green check icon&quot;&gt;&lt;/i&gt;&#x27;</span>,\n      <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;Display successful user input&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;green check&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Error&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;&lt;i class=&quot;red error icon&quot;&gt;&lt;/i&gt;&#x27;</span>,\n      <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;Error hints and messages&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;red error&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"border-width\" tabindex=\"-1\"><code>border-width</code></h4>\n<p>The border-width type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The border-width token name</li>\n<li><code>value</code>: The CSS value to render the border width</li>\n<li><code>variable</code></li>\n<li><code>description</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Border Widths&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Width Thin&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;1px&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-width-thin&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Width Thick&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;4px&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-width-thick&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"border-style\" tabindex=\"-1\"><code>border-style</code></h4>\n<p>The border-style type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The border-style token name</li>\n<li><code>value</code>: The CSS value to render the border style</li>\n<li><code>variable</code></li>\n<li><code>description</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Border Styles&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Style Solid&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;solid&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-style-solid&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Style Dashed&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;dashed&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-style-dashed&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"border-radius\" tabindex=\"-1\"><code>border-radius</code></h4>\n<p>The border-radius type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The border-radius token name</li>\n<li><code>value</code>: The CSS value to render the border radius</li>\n<li><code>variable</code></li>\n<li><code>description</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Border Radius&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Radius Default&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;6px&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-radius-default&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Border Radius Pill&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;20rem&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$border-radius-pill&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"box-shadow\" tabindex=\"-1\"><code>box-shadow</code></h4>\n<p>The box-shadow type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The box-shadow token name</li>\n<li><code>value</code>: The CSS value to render the box shadow</li>\n<li><code>variable</code></li>\n<li><code>description</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Box Shadows&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Box Shadow Default&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;0 2px 6px 0 rgba(0, 41, 77, 0.1)&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$box-shadow-default&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Box Shadow Modal&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;0 2px 20px 0 rgba(0, 0, 0, 0.2)&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$box-shadow-modal&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<h4 id=\"opacity\" tabindex=\"-1\"><code>opacity</code></h4>\n<p>The opacity type supports the following attributes:</p>\n<ul>\n<li><code>name</code>: The opacity token name</li>\n<li><code>value</code>: The CSS value to render the opacity</li>\n<li><code>variable</code></li>\n<li><code>description</code></li>\n<li><code>reference</code></li>\n</ul>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Opacity&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Opacity 30%&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;0.3&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$opacity-30&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Opacity 75%&#x27;</span>,\n      <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&#x27;0.75&#x27;</span>,\n      <span class=\"hljs-attr\">variable</span>: <span class=\"hljs-string\">&#x27;$opacity-75&#x27;</span>\n    }\n  ]\n}\n</code></pre>"
    },
    "advanced/integrations": {
      "childIds": [],
      "id": "advanced/integrations",
      "title": "Integrations",
      "isTitleFromHeading": true,
      "path": "advanced/integrations",
      "sourcePath": "site/advanced/integrations",
      "readmeFile": "site/advanced/integrations/README.md",
      "type": "documentation",
      "content": "<h1 id=\"integrations\" tabindex=\"-1\">Integrations</h1>\n<h2 id=\"gulp\" tabindex=\"-1\">Gulp</h2>\n<p>To integrate the UIengine into your Gulp build you have to add the following lines of code to your Gulpfile:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> UIengine = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;@uiengine/core&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> isDev = process.env.NODE_ENV !== <span class=\"hljs-string\">&#x27;production&#x27;</span>\n\ngulp.task(<span class=\"hljs-string\">&#x27;uiengine&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">done</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> opts = {\n    <span class=\"hljs-attr\">serve</span>: isDev,\n    <span class=\"hljs-attr\">watch</span>: isDev\n  }\n\n  UIengine.build(opts)\n    .then(<span class=\"hljs-function\">() =&gt;</span> { done() })\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> { done(err) })\n})\n</code></pre>\n<p>The <code>UIengine.build()</code> function accepts an options object with the following optional properties:</p>\n<ul>\n<li><code>debug</code>: Debug level from <code>1</code> (basic) to <code>4</code> (very verbose) (default <code>0</code>).</li>\n<li><code>serve</code>: Spawn a development server (default <code>false</code>).</li>\n<li><code>watch</code>: Rebuild the site on changes (default <code>false</code>).</li>\n</ul>\n<p>Note: To use the <code>serve</code> and <code>watch</code> options, you will also need to install two optional dependencies.\nYou can do so by adding the following packages to you projects <code>devDependencies</code>:</p>\n<ul>\n<li><code>browser-sync</code></li>\n<li><code>chokidar</code></li>\n</ul>\n<p>In case your project has additional files that should trigger a rebuild you can pass them as a <code>String</code> or <code>Array</code> for the <code>watch</code> option:</p>\n<pre class=\"hljs lang-js\"><code>gulp.task(<span class=\"hljs-string\">&#x27;uiengine&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">done</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> opts = {\n    <span class=\"hljs-attr\">serve</span>: isDev,\n    <span class=\"hljs-attr\">watch</span>: isDev ? [<span class=\"hljs-string\">&#x27;src/data/*.json&#x27;</span>, <span class=\"hljs-string\">&#x27;src/custom/**/*.md&#x27;</span>] : <span class=\"hljs-literal\">false</span>\n  }\n\n  UIengine.build(opts)\n    .then(<span class=\"hljs-function\">() =&gt;</span> { done() })\n    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> { done(err) })\n})\n</code></pre>\n<h2 id=\"html-sketchapp\" tabindex=\"-1\">html-sketchapp</h2>\n<p>The <a href=\"https://github.com/brainly/html-sketchapp\">html-sketchapp</a> functionality is integrated via a <a href=\"https://github.com/seek-oss/html-sketchapp-cli\">html-sketchapp-cli</a> compatible export.\nIt generates Sketch libraries for your component variants.</p>\n<p>The UIengine generates the <code>/_sketch/THEME_ID.html</code> file which can be used with <code>html-sketchapp-cli</code>.</p>\n<h2 id=\"theo\" tabindex=\"-1\">Theo</h2>\n<p><strong>Please note:</strong> The Theo integration is now deprecated, docs stay as reference for older versions.</p>\n<p>You can integrate and consume design tokens defined with the <a href=\"https://github.com/salesforce-ux/theo#spec\">Theo</a> tokens spec.</p>\n<p>You need the <code>@uiengine/bridge-theo</code> package for this.</p>\n<p>The UIengine integration can be used inside the <code>page.config.js</code>:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { resolve } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> convert = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;@uiengine/bridge-theo&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> filePath = resolve(__dirname, <span class=\"hljs-string\">&#x27;colors.yml&#x27;</span>)\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Colors&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: convert(filePath)\n}\n</code></pre>\n<p>The transformations converts your Theo <code>props</code> into a format that can be rendered by the UIengine tokens template.\nFor details on the format see the <a href=\"/advanced/design-tokens/\">design token docs</a>.</p>\n<p>You can also pass a modification callback to the <code>convert</code> function.\nThis allows you to further modify the property data:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> { resolve } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> convert = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;@uiengine/bridge-theo&#x27;</span>)\n\n<span class=\"hljs-keyword\">const</span> filePath = resolve(__dirname, <span class=\"hljs-string\">&#x27;colors.yml&#x27;</span>)\n<span class=\"hljs-keyword\">const</span> titleize = <span class=\"hljs-function\"><span class=\"hljs-params\">string</span> =&gt;</span> string.replace(<span class=\"hljs-regexp\">/^color/</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>).replace(<span class=\"hljs-regexp\">/([A-Z\\d]+)/g</span>, <span class=\"hljs-string\">&#x27; $1&#x27;</span>).replace(<span class=\"hljs-regexp\">/^./</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">str</span> =&gt;</span> str.toUpperCase())\n<span class=\"hljs-keyword\">const</span> variablize = <span class=\"hljs-function\"><span class=\"hljs-params\">string</span> =&gt;</span> <span class=\"hljs-string\">`$<span class=\"hljs-subst\">${string.replace(<span class=\"hljs-regexp\">/([a-z])([A-Z\\d]+)/g</span>, <span class=\"hljs-string\">&#x27;$1-$2&#x27;</span>).replace(<span class=\"hljs-regexp\">/\\s+/g</span>, <span class=\"hljs-string\">&#x27;-&#x27;</span>).toLowerCase()}</span>`</span>\n<span class=\"hljs-keyword\">const</span> modify = <span class=\"hljs-function\"><span class=\"hljs-params\">prop</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> { name, reference } = prop\n  prop.name = titleize(name)\n  prop.variable = variablize(name)\n  <span class=\"hljs-keyword\">if</span> (reference) prop.reference = titleize(reference)\n  <span class=\"hljs-keyword\">return</span> prop\n}\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Colors&#x27;</span>,\n  <span class=\"hljs-attr\">tokens</span>: convert(filePath, modify)\n}\n</code></pre>"
    },
    "advanced/plugins": {
      "childIds": [],
      "id": "advanced/plugins",
      "title": "Plugins",
      "isTitleFromHeading": true,
      "path": "advanced/plugins",
      "sourcePath": "site/advanced/plugins",
      "readmeFile": "site/advanced/plugins/README.md",
      "type": "documentation",
      "content": "<h1 id=\"plugins\" tabindex=\"-1\">Plugins</h1>\n<p>You configure the plugins for your project in the <a href=\"/basics/config/\">project configuration file</a>:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">plugins</span>: [\n    {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/plugin-preview-toggle-class&#x27;</span>\n    }\n  }\n}\n</code></pre>\n<p>You can also provide a set of options ‚Äì¬†see the individual plugins documentation for details:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">plugins</span>: [\n    {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/plugin-preview-toggle-class&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Toggle Grid&#x27;</span>,\n        <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">&#x27;body&#x27;</span>,\n        <span class=\"hljs-attr\">className</span>: <span class=\"hljs-string\">&#x27;show-grid&#x27;</span>\n      }\n    }\n  ]\n}\n</code></pre>\n<p>See the list of available plugins¬†‚Äì either to find an existing one or for a starting point to create a custom one:</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/search?q=uiengine-plugin\">NPM</a></li>\n<li><a href=\"https://github.com/dennisreimann/uiengine/tree/master/packages\">GitHub: Core</a></li>\n<li><a href=\"https://github.com/search?q=topic%3Auiengine-plugin&amp;type=Repositories\">GitHub: Third-Party</a></li>\n</ul>\n<h2 id=\"plugin-modules\" tabindex=\"-1\">Plugin Modules</h2>\n<p>A plugin module has to export at least a <code>setup</code> function.</p>\n<h3 id=\"functions\" tabindex=\"-1\">Functions</h3>\n<p>All the functions get called with the plugin options that are defined in the plugin config.</p>\n<p><strong>Note:</strong> All of these functions are expected to work asynchronously and should return a Promise.</p>\n<h4 id=\"setup(opts%2C-api)\" tabindex=\"-1\"><code>setup(opts, api)</code></h4>\n<p>This function is called on project initialization.\nYou can use this hook to configure your plugins features via the <code>api</code>.</p>\n<p>TODO:¬†<a href=\"https://github.com/dennisreimann/uiengine/blob/plugins/packages/core/src/plugin.js\">API description</a></p>"
    },
    "advanced/properties": {
      "childIds": [],
      "id": "advanced/properties",
      "title": "Properties",
      "isTitleFromHeading": true,
      "path": "advanced/properties",
      "sourcePath": "site/advanced/properties",
      "readmeFile": "site/advanced/properties/README.md",
      "type": "documentation",
      "content": "<h1 id=\"properties\" tabindex=\"-1\">Properties</h1>\n<p>You can document the component properties in the <a href=\"/basics/component/#component-file\">component config file</a>.</p>\n<p>List the components using the name as key and the definition for each property as value:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">properties</span>: {\n    <span class=\"hljs-string\">&#x27;+episode(episode)&#x27;</span>: {\n      <span class=\"hljs-attr\">episode</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;Episode&#x27;</span>,\n        <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>\n      }\n    },\n    <span class=\"hljs-string\">&#x27;+cta(title, url)&#x27;</span>: {\n      <span class=\"hljs-attr\">title</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;String&#x27;</span>,\n        <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;Button-Title&#x27;</span>,\n        <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>\n      },\n      <span class=\"hljs-attr\">url</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;String&#x27;</span>,\n        <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&#x27;URL the button leads to&#x27;</span>,\n        <span class=\"hljs-attr\">required</span>: <span class=\"hljs-literal\">true</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>The name (e.g. <code>+episode(episode)</code>) is an arbitrary value and will be displayed as the title.\nYou can use it to describe the code that should be used to render the component ‚Äì¬†like the example above for a Pug component.</p>"
    },
    "advanced/ui": {
      "childIds": [],
      "id": "advanced/ui",
      "title": "User Interface",
      "isTitleFromHeading": true,
      "path": "advanced/ui",
      "sourcePath": "site/advanced/ui",
      "readmeFile": "site/advanced/ui/README.md",
      "type": "documentation",
      "content": "<h1 id=\"user-interface\" tabindex=\"-1\">User Interface</h1>\n<h2 id=\"configuration\" tabindex=\"-1\">Configuration</h2>\n<p>This is what the full options look like:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">ui</span>: {\n    <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">&#x27;en&#x27;</span>,\n    <span class=\"hljs-attr\">hljs</span>: <span class=\"hljs-string\">&#x27;atom-one-dark&#x27;</span>,\n    <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span>,\n    <span class=\"hljs-attr\">repoBaseUrl</span>: <span class=\"hljs-string\">&#x27;https://github.com/dennisreimann/uiengine/blob/master/test/project/&#x27;</span>,\n    <span class=\"hljs-attr\">customStylesFile</span>: <span class=\"hljs-string\">&#x27;/custom-styles-file.css&#x27;</span>,\n    <span class=\"hljs-attr\">analyticsId</span>: <span class=\"hljs-string\">&#x27;UA-XXX-X&#x27;</span>,\n    <span class=\"hljs-attr\">debug</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">cache</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-attr\">breakpoints</span>: {\n      <span class=\"hljs-attr\">XS</span>: <span class=\"hljs-number\">320</span>,\n      <span class=\"hljs-attr\">S</span>: <span class=\"hljs-number\">560</span>,\n      <span class=\"hljs-attr\">M</span>: <span class=\"hljs-number\">760</span>,\n      <span class=\"hljs-attr\">L</span>: <span class=\"hljs-number\">960</span>,\n      <span class=\"hljs-attr\">XL</span>: <span class=\"hljs-number\">1280</span>\n    },\n\n    <span class=\"hljs-attr\">viewports</span>: {\n      <span class=\"hljs-attr\">Phone</span>: {\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">320</span>\n      },\n      <span class=\"hljs-attr\">Tablet</span>: {\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">768</span>\n      },\n      <span class=\"hljs-attr\">Desktop</span>: {\n        <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">1280</span>\n      }\n    },\n\n    <span class=\"hljs-attr\">locales</span>: {\n      <span class=\"hljs-attr\">en</span>: {\n        <span class=\"hljs-comment\">// custom locale overrides</span>\n      }\n    },\n\n    <span class=\"hljs-attr\">meta</span>: [\n      {\n        <span class=\"hljs-attr\">tag</span>: <span class=\"hljs-string\">&#x27;link&#x27;</span>,\n        <span class=\"hljs-attr\">attrs</span>: {\n          <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>,\n          <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;/my-special-favicon.ico&#x27;</span>\n        }\n      }\n    ],\n\n    <span class=\"hljs-attr\">foot</span>: <span class=\"hljs-string\">&#x27;&lt;script src=&quot;/scripts/my-custom-script.js&quot;&gt;&lt;/script&gt;&#x27;</span>\n  }\n}\n</code></pre>\n<h3 id=\"lang\" tabindex=\"-1\">lang</h3>\n<p>Localization language for the interface. Available options:</p>\n<ul>\n<li><code>en</code> (default)</li>\n<li><code>de</code></li>\n</ul>\n<p>Feel free to send a pull request with additional <a href=\"../packages/ui/src/locales\">localizations</a>!</p>\n<h3 id=\"hljs\" tabindex=\"-1\">hljs</h3>\n<p>The highlight.js theme for the code blocks, defaults to <code>atom-one-dark</code>.\nFor a list of available options see the <a href=\"https://highlightjs.org/static/demo/\">highlight.js demo</a>.</p>\n<h3 id=\"customstylesfile\" tabindex=\"-1\">customStylesFile</h3>\n<p>The path to a css files containing variable overrides and extensions for the UI.\nFor an example see the <a href=\"https://github.com/dennisreimann/uiengine/blob/master/test/project/src/styles/uiengine-custom-styles.css\">custom styles file of the test project</a>.</p>\n<h3 id=\"analyticsid\" tabindex=\"-1\">analyticsId</h3>\n<p>Optionally you can provide an <code>analyticsId</code> (from Google Analytics <code>UA-XXX-X</code>) to track the site.</p>\n<h3 id=\"base\" tabindex=\"-1\">base</h3>\n<p>Sets the base path for the output.\nDefaults to <code>/</code>.</p>\n<h3 id=\"repobaseurl\" tabindex=\"-1\">repoBaseUrl</h3>\n<p>Sets the repository web view base URL (e.g. for GitHub/GitLab).\nThis adds a link for components and pages to view/edit the corresponding files in the repo.\nSet this to the blob resource for a particular branch, e.g. <code>https://github.com/dennisreimann/uiengine/blob/master/test/project/</code>.</p>\n<h3 id=\"debug\" tabindex=\"-1\">debug</h3>\n<p>Enable debug output, most likely to be used during UI development.</p>\n<p>Available options:</p>\n<ul>\n<li><code>false</code> (default)</li>\n<li><code>true</code></li>\n</ul>\n<h3 id=\"cache\" tabindex=\"-1\">cache</h3>\n<p>Enable template cache, most likely to be disabled during UI development.</p>\n<p>Available options:</p>\n<ul>\n<li><code>true</code> (default)</li>\n<li><code>false</code></li>\n</ul>\n<h3 id=\"breakpoints\" tabindex=\"-1\">breakpoints</h3>\n<p>The breakpoints defined here will be shown in the preview settings.\nDeclare the breakpoints with the name as key and the minimum media query pixel being the value:</p>\n<pre class=\"hljs lang-js\"><code>breakpoints: {\n  XS: 320,\n  S: 560,\n  M: 768,\n  L: 960,\n  XL: 1280\n}\n</code></pre>\n<h3 id=\"viewports\" tabindex=\"-1\">viewports</h3>\n<p>The viewports defined here will be shown in the preview settings.\nDeclare the viewports with the name as key and the <code>width</code> (required) and <code>height</code> (optional) being the value:</p>\n<pre class=\"hljs lang-js\"><code>viewports: {\n  Phone: {\n    width: 320\n  },\n  Tablet: {\n    width: 768\n  },\n  Desktop: {\n    width: 1280\n  }\n}\n</code></pre>\n<p>If the height is defined, the preview container will be scrollable.\nIt the height is omitted, the preview content will define the height ‚Äì¬†just like with <code>breakpoints</code>.</p>\n<h3 id=\"defaultpreviewmode\" tabindex=\"-1\">defaultPreviewMode</h3>\n<p>When viewports and breakpoints are defined, breakpoints take precedence.\nYou can also define <code>defaultPreviewMode: 'viewports'</code> to switch this default.</p>\n<p>Available options:</p>\n<ul>\n<li><code>breakpoints</code> (default)</li>\n<li><code>viewports</code></li>\n</ul>\n<p>The preview mode can also be switched in the preference settings.</p>\n<h3 id=\"locales\" tabindex=\"-1\">locales</h3>\n<p>You can override the whole locale or specific keys.\nThe keys you provide get merged deeply with the existing locales.</p>\n<h3 id=\"meta\" tabindex=\"-1\">meta</h3>\n<p>An optional list of tags to be included in the <code>&lt;head&gt;</code>:</p>\n<pre class=\"hljs lang-js\"><code>meta: [\n  {\n    <span class=\"hljs-attr\">tag</span>: <span class=\"hljs-string\">&#x27;link&#x27;</span>,\n    <span class=\"hljs-attr\">attrs</span>: {\n      <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>,\n      <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;/my-special-favicon.ico&#x27;</span>\n    }\n  }\n]\n</code></pre>\n<h3 id=\"foot\" tabindex=\"-1\">foot</h3>\n<p>Optional tags for the end of the body.</p>"
    },
    "basics/component": {
      "childIds": [],
      "id": "basics/component",
      "title": "Component",
      "isTitleFromHeading": true,
      "path": "basics/component",
      "sourcePath": "site/basics/component",
      "readmeFile": "site/basics/component/README.md",
      "type": "documentation",
      "content": "<h1 id=\"component\" tabindex=\"-1\">Component</h1>\n<p>A component is a single interface unit.\nIn the UIengine terminology it encapsulates everything belonging to the component:</p>\n<ul>\n<li>Markup</li>\n<li>Styles</li>\n<li>Scripts</li>\n<li>Tests</li>\n</ul>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction 03: Components and Variants\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2&index=2\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"directory-structure\" tabindex=\"-1\">Directory Structure</h2>\n<p>Here is an example structure for some components that use Pug as templating engine (see <a href=\"/adapters/\">adapters</a>), as well as plain CSS and JavaScript:</p>\n<pre class=\"hljs lang-tree\"><code>components\n|___button\n|   |___variants\n|   |   |___button-default.html\n|   |   |___button-primary.html\n|   |___button.css\n|   |___button.html\n|   |___component.config.js\n|   |___README.md\n|___slider\n    |___tests\n    |   |___slider_test.js\n    |___variants\n    |   |___slider-default.html\n    |___component.config.js\n    |___slider.css\n    |___slider.js\n    |___slider.html\n    |___README.md\n</code></pre>\n<p>A component directory most likely also has a directory named <a href=\"/basics/variant/\">variants</a>, which contains some usage samples.</p>\n<p>To add meta data to the component, there is the <code>component.config.js</code> file.\nThis meta data can supply the title, and description as well as a label for the component.</p>\n<h2 id=\"component-files\" tabindex=\"-1\">Component files</h2>\n<p>The <code>component.config.js</code> contents for the button might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Button&quot;</span>,\n  <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;B1&quot;</span>,\n  <span class=\"hljs-attr\">tags</span>: [<span class=\"hljs-string\">&quot;atom&quot;</span>, <span class=\"hljs-string\">&quot;form&quot;</span>],\n  <span class=\"hljs-attr\">variants</span>: [<span class=\"hljs-string\">&quot;button-default.html&quot;</span>, <span class=\"hljs-string\">&quot;button-primary.html&quot;</span>]\n}\n</code></pre>\n<p>The <code>title</code> and <code>label</code> get displayed in the documentation.\nThe <code>label</code> is an individual marker that can be used as a reference in mockups or wireframes to reference components.\nThe <code>tags</code> list is optional and can be used to search for pages.\nThe <code>variants</code> attribute is documented in the <a href=\"/basics/variant/\">variant documentation</a>.\nThe <code>properties</code> attribute is documented in the <a href=\"/advanced/properties/\">properties documentation</a>.</p>\n<p>In addition to that, there is also the <code>README.md</code>, which can contain detailed documentation.</p>"
    },
    "basics/config": {
      "childIds": [],
      "id": "basics/config",
      "title": "Configuration",
      "isTitleFromHeading": true,
      "path": "basics/config",
      "sourcePath": "site/basics/config",
      "readmeFile": "site/basics/config/README.md",
      "type": "documentation",
      "content": "<h1 id=\"configuration\" tabindex=\"-1\">Configuration</h1>\n<p>The project configuration lives in a file named <code>uiengine.config.js</code>.</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction 02: Config, Pages and Design Tokens\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2&index=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"sections\" tabindex=\"-1\">Sections</h2>\n<h3 id=\"project-config\" tabindex=\"-1\">Project config</h3>\n<p>Defaults to <code>name</code> and <code>version</code> from your package.json file.\nHere you can overwrite it and add more custom properties.</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;ACME Design System&#x27;</span>,\n  <span class=\"hljs-attr\">version</span>: <span class=\"hljs-string\">&#x27;1.0.0&#x27;</span>,\n  <span class=\"hljs-attr\">logo</span>: <span class=\"hljs-string\">&#x27;/images/logo.png&#x27;</span>,\n  <span class=\"hljs-attr\">copyright</span>: <span class=\"hljs-string\">&#x27;ACME Corp&#x27;</span>,\n}\n</code></pre>\n<h3 id=\"source\" tabindex=\"-1\">Source</h3>\n<p>The base directories for the input, your raw source files:</p>\n<ul>\n<li><code>components</code> is the root of the directory (or directories) containing the components</li>\n<li><code>templates</code> contains the variant preview and application templates</li>\n<li><code>pages</code> is the directory of the UIengine‚Äôs site structure and page markdown files</li>\n<li><code>additionalWatches</code> optional list of directories and files that should trigger a rebuild markdown files</li>\n</ul>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">source</span>: {\n    <span class=\"hljs-attr\">components</span>: <span class=\"hljs-string\">&#x27;./src/components&#x27;</span>,\n    <span class=\"hljs-attr\">templates</span>: <span class=\"hljs-string\">&#x27;./src/templates&#x27;</span>,\n    <span class=\"hljs-attr\">pages</span>: <span class=\"hljs-string\">&#x27;./uiengine&#x27;</span>,\n    <span class=\"hljs-attr\">additionalWatches</span>: [<span class=\"hljs-string\">&#x27;./lib&#x27;</span>]\n  }\n}\n</code></pre>\n<p>The <code>source.components</code> config can also be an array of paths:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">source</span>: {\n    <span class=\"hljs-attr\">components</span>: [\n      <span class=\"hljs-string\">&#x27;./src/elements&#x27;</span>,\n      <span class=\"hljs-string\">&#x27;./src/modules&#x27;</span>,\n    ]\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}\n</code></pre>\n<h3 id=\"target\" tabindex=\"-1\">Target</h3>\n<p>Destination paths for the generated output.</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">target</span>: <span class=\"hljs-string\">&#x27;./dist&#x27;</span>\n}\n</code></pre>\n<h3 id=\"adapters\" tabindex=\"-1\">Adapters</h3>\n<p>Adapters are used for templating/rendering.\nYou configure the adapters using the file extension of the template file as the adapter key.\nEach adapter is a module that gets required, for details see the <a href=\"/adapters/\">adapters documentation</a>.</p>\n<p>There are two slightly different ways to configure the value:\nThe first way is to directly reference the module or path that will get required:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>,\n    <span class=\"hljs-attr\">hbs</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-handlebars&#x27;</span>\n  }\n}\n</code></pre>\n<p>In case you need to provide additional options that will be passed to the adapter, you need to\nexplicitely reference the module and its options:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">adapters</span>: {\n    <span class=\"hljs-attr\">pug</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-pug&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">pretty</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">basedir</span>: <span class=\"hljs-string\">&#x27;./src/components&#x27;</span>\n      }\n    },\n    <span class=\"hljs-attr\">hbs</span>: {\n      <span class=\"hljs-attr\">module</span>: <span class=\"hljs-string\">&#x27;@uiengine/adapter-handlebars&#x27;</span>,\n      <span class=\"hljs-attr\">options</span>: {\n        <span class=\"hljs-attr\">namespace</span>: <span class=\"hljs-string\">&#x27;my-project&#x27;</span>\n      }\n    }\n  }\n}\n</code></pre>\n<p>In either way the adapter module can be ‚Ä¶</p>\n<ul>\n<li>the path to a directory inside this project that contains the adapter\n(case: you use the adapter just for this project)</li>\n<li>the name of the npm package that is the adapter\n(case: you use an existing adapter or want to share yours across projects)</li>\n</ul>\n<h3 id=\"template\" tabindex=\"-1\">Template</h3>\n<p>This is the template the previews gets rendered into.\nIt should contain references to your styles and scripts, so that the rendered markup has the asset context it needs.</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">&#x27;uiengine.html&#x27;</span>\n}\n</code></pre>\n<p>It must also include the <code>&lt;!-- uiengine:content --&gt;</code> comment, which will be replaced with the rendered markup.</p>\n<p>Other comments that also get replaced:</p>\n<ul>\n<li><code>&lt;!-- uiengine:title --&gt;</code> is the page title: <code>&lt;title&gt;&lt;!-- uiengine:title --&gt;&lt;/title&gt;</code></li>\n<li><code>&lt;!-- uiengine:class --&gt;</code> is the page class: <code>&lt;html class=&quot;&lt;!-- uiengine:class --&gt;&quot;&gt;</code></li>\n<li><code>&lt;!-- uiengine:theme --&gt;</code> is the theme id: <code>&lt;html data-theme=&quot;&lt;!-- uiengine:theme --&gt;&quot;&gt;</code></li>\n<li><code>&lt;!-- uiengine:foot --&gt;</code> is the client side rendering code that gets injected.</li>\n</ul>\n<h3 id=\"themes\" tabindex=\"-1\">Themes</h3>\n<p>The themes defined here will be shown in the topbar.\nThe first theme is selected by default.</p>\n<p>Each variant and page will be rendered per theme.</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-attr\">themes</span>: [\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;default&#x27;</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Default&#x27;</span>\n    },\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;funky&#x27;</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Bright colors&#x27;</span>\n    }\n  ]\n}\n</code></pre>\n<p>If no themes are defined, one with the id <code>_default</code> will be used.</p>\n<h3 id=\"ui\" tabindex=\"-1\">UI</h3>\n<p>See the <a href=\"/advanced/ui/\">UI docs</a> for details.</p>\n<h3 id=\"browsersync\" tabindex=\"-1\">BrowserSync</h3>\n<p>The <code>uiengine build</code> command (see the <a href=\"/basics/getting-started/\">getting started guide</a> supports modes for serving and watching files.\nHere you can pass in the corresponding <a href=\"https://www.browsersync.io/docs/options/\">BrowserSync configuration</a>:</p>\n<pre class=\"hljs lang-js\"><code>{\n  <span class=\"hljs-comment\">// either directly</span>\n  <span class=\"hljs-attr\">browserSync</span>: {\n    <span class=\"hljs-attr\">open</span>: <span class=\"hljs-literal\">false</span>\n  },\n\n  <span class=\"hljs-comment\">// or by referencing an external file:</span>\n  <span class=\"hljs-attr\">browserSync</span>: <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./bs-config.js&#x27;</span>)\n}\n</code></pre>"
    },
    "basics/getting-started": {
      "childIds": [],
      "id": "basics/getting-started",
      "title": "Getting Started",
      "isTitleFromHeading": true,
      "path": "basics/getting-started",
      "sourcePath": "site/basics/getting-started",
      "readmeFile": "site/basics/getting-started/README.md",
      "type": "documentation",
      "content": "<h1 id=\"getting-started\" tabindex=\"-1\">Getting Started</h1>\n<p>This guide helps you to get started quickly with the <code>uiengine</code>.\nWe will use <code>npx</code> to run the locally installed <code>uiengine</code> in the following.</p>\n<blockquote></blockquote>\n<p><code>npx</code> is bundled with <code>npm</code> since <a href=\"https://github.com/npm/npm/releases/tag/v5.2.0\">v5.2.0</a>.\nIt allows us to easily run locally installed packages like <code>uiengine</code>, which must have been installed globally otherwise, setup in the <code>$PATH</code> variable or called with a path prefix.</p>\n<h2 id=\"%F0%9F%8F%8E-tl%3Bdr-%E2%80%93-the-fast-lane\" tabindex=\"-1\">üèé TL;DR ‚Äì¬†The fast lane</h2>\n<p>The following process is also covered in the <a href=\"https://www.youtube.com/watch?v=YBm_ye9da-Q&amp;list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2\">introduction videos</a>:</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction Videos\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<p>Initialize a new npm project:</p>\n<pre class=\"hljs lang-bash\"><code>mkdir uiengine-demo &amp;&amp; <span class=\"hljs-built_in\">cd</span> uiengine-demo &amp;&amp; npm init\n</code></pre>\n<p>You will be prompted for the project information.\nTo skip the prompt and use some empty defaults, run <code>npm init -y</code> instead.</p>\n<p>Next, install the UIengine development dependencies locally:</p>\n<pre class=\"hljs lang-bash\"><code>npm install @uiengine/core @uiengine/adapter-html --save-dev\n</code></pre>\n<p>Now initialize an empty UIengine demo project:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine init --demo\n</code></pre>\n<p>Serve the project locally and watch for changes:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine build --serve --watch\n</code></pre>\n<p>Congratulations! üéâ\nNow you have a basic UIengine demo project running.</p>\n<p>In the following you can read about the steps in more detail.</p>\n<h2 id=\"%F0%9F%93%A6-how-to-install-the-uiengine%3F\" tabindex=\"-1\">üì¶ How to install the UIengine?</h2>\n<p>The UIengine should be installed as a dependency for a project.</p>\n<pre class=\"hljs lang-bash\"><code>npm install --save-dev @uiengine/core\n</code></pre>\n<p>You will also need at least one adapter to render your components.\nHere we will use the HTML adapter as an example, so go ahead and install it:</p>\n<pre class=\"hljs lang-bash\"><code>npm install --save-dev @uiengine/adapter-html\n</code></pre>\n<p>See the <a href=\"/adapters/\">adapter docs</a> for details and a list of available adapters.</p>\n<h2 id=\"%F0%9F%94%B0-how-to-setup-the-uiengine-in-a-project%3F\" tabindex=\"-1\">üî∞ How to setup the UIengine in a project?</h2>\n<p>You should initialize the UIengine in the directory that also contains your <code>package.json</code>.</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine init\n</code></pre>\n<p>This command creates a config file named <code>uiengine.config.js</code>, which contains the basic configuration.\nIt also creates the folder <code>pages</code> containing a <code>README.md</code> file.\nThis is the page file for the index page of the documentation.</p>\n<p>You can also use the demo flag when initializing the project:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine init --demo\n</code></pre>\n<p>This generates some demo pages and components to give a basic overview for some of the features.\nBeware: It uses the HTML adapter, hence the components are very simplistic.</p>\n<h2 id=\"%E2%9A%99%EF%B8%8F-how-to-configure-the-project%3F\" tabindex=\"-1\">‚öôÔ∏è How to configure the project?</h2>\n<p>The config file <code>uiengine.config.js</code> contains the basic configuration for your project.\nIf you generated the file with the <code>init</code> command it contains comments for the individual sections.\nSee the <a href=\"/basics/config/\">config documentation</a> for details.</p>\n<h2 id=\"%E2%9E%95-how-to-create-a-component%3F\" tabindex=\"-1\">‚ûï How to create a component?</h2>\n<p>To generate the basic files of a component you can use the <code>component</code> command:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine component COMPONENT_ID\n</code></pre>\n<p>This will also generate a default variant named after the component.\nIn case you want to directly add some variants, you can list them like so:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine component COMPONENT_ID VARIANT_1 VARIANT_2 VARIANT_3\n</code></pre>\n<h2 id=\"%E2%9E%95-how-to-create-a-variant%3F\" tabindex=\"-1\">‚ûï How to create a variant?</h2>\n<p>A variant needs at least a file to render.\nYou create a variant by adding a file renderable by one of the configured adapters to the <code>variants</code> directory of a component.</p>\n<p>To render a variant, we also need a layout.\nThe <code>npx uiengine init</code> command created a basic html layout file in <code>src/templates/uiengine.html</code>.\nIt includes the <code>&lt;!-- uiengine:content --&gt;</code> comment, which will be replaced with the HTML of the rendered variant.\nYou can go ahead and extend the layout to fit your needs and include the correct HTML and style and script references.</p>\n<p>This layout file is just there to get you started.\nFeel free to change its content and use an other adapter to fit your projects needs.</p>\n<h2 id=\"%E2%9E%95-how-to-create-a-page%3F\" tabindex=\"-1\">‚ûï How to create a page?</h2>\n<p>To generate the basic files and folders of a page you can use the <code>page</code> command:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine page PAGE_ID\n</code></pre>\n<p>This generates a <code>README.md</code> and a <code>page.config.js</code> file inside the folder matching the page id in you pages source directory.\nIn case you want to directly add some pages, you can list them like so:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine page PAGE_1_ID PAGE_2_ID PAGE_3_ID\n</code></pre>\n<p>Say you would like to create pages for grouping your components with the <a href=\"http://atomicdesign.bradfrost.com/chapter-2/\">Atomic Design Methodology</a>:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine page atoms molecules organisms templates pages\n</code></pre>\n<h2 id=\"%E2%9C%A8-how-to-generate-the-project%3F\" tabindex=\"-1\">‚ú® How to generate the project?</h2>\n<p>The site can be generated with the following command:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine build\n</code></pre>\n<p>To rebuild on file change you can also leverage the watch mode:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine build --watch\n</code></pre>\n<p>You can also spawn a server for the generated site:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine build --serve\n</code></pre>\n<p>The <code>watch</code> and <code>serve</code> options can be combined, which makes a good development environment:</p>\n<pre class=\"hljs lang-bash\"><code>npx uiengine build --watch --serve\n</code></pre>\n<p>Under the hood <a href=\"https://www.browsersync.io/\">BrowserSync</a> is used to provide serving and watching the files.\nFor information on how to configure the server and pass additional options, see the <a href=\"/basics/config/#BrowserSync\">configuration documentation</a>.</p>"
    },
    "basics/page": {
      "childIds": [],
      "id": "basics/page",
      "title": "Page",
      "isTitleFromHeading": true,
      "path": "basics/page",
      "sourcePath": "site/basics/page",
      "readmeFile": "site/basics/page/README.md",
      "type": "documentation",
      "content": "<h1 id=\"page\" tabindex=\"-1\">Page</h1>\n<p>Pages are used to generate the documentation.</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction 02: Config, Pages and Design Tokens\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2&index=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"directory-structure\" tabindex=\"-1\">Directory Structure</h2>\n<p>Here is an example structure for some pages using the <a href=\"http://atomicdesign.bradfrost.com/chapter-2/\">Atomic Design Methodology</a>:</p>\n<pre class=\"hljs lang-tree\"><code>pages\n|___atoms\n|   |___page.config.js\n|   |___README.md\n|___molecules\n|   |___page.config.js\n|   |___README.md\n|___organisms\n|   |___page.config.js\n|   |___README.md\n|___prototype\n|   |___page.config.js\n|   |___README.md\n|   |___homepage\n|   |   |___page.config.js\n|   |   |___README.md\n|   |___productlist\n|   |   |___page.config.js\n|   |   |___README.md\n|   |___productdetails\n|   |   |___page.config.js\n|   |   |___README.md\n|   |___cart\n|       |___page.config.js\n|       |___README.md\n|       |___empty\n|       |   |___page.config.js\n|       |   |___README.md\n|       |___full\n|           |___page.config.js\n|           |___README.md\n|___page.config.js\n|___README.md\n    |___static\n        |___brandmanual.pdf\n        |___components.sketch\n        |___logo.svg\n</code></pre>\n<p>A page can contain child pages and have <a href=\"#additional-page-files\">additional files</a>.</p>\n<h2 id=\"page-files\" tabindex=\"-1\">Page files</h2>\n<p>A page is identified by the presence of a <code>README.md</code> markdown file, which contains the page content:</p>\n<pre class=\"hljs lang-md\"><code>![<span class=\"hljs-string\">ACME Design System</span>](<span class=\"hljs-link\">/static/logo.svg</span>)\n\nThe ACME Design System: Components and templates for our web application.\n</code></pre>\n<p>In addition to this you can also provide a <code>page.config.js</code> file, which can list the subpages/components or define the template the page gets rendered with.</p>\n<p>The <code>page.config.js</code> contents for the home/index page might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Home&quot;</span>,\n  <span class=\"hljs-attr\">children</span>: [<span class=\"hljs-string\">&quot;atoms&quot;</span>, <span class=\"hljs-string\">&quot;molecules&quot;</span>, <span class=\"hljs-string\">&quot;organisms&quot;</span>, <span class=\"hljs-string\">&quot;prototype&quot;</span>]\n}\n</code></pre>\n<p>The <code>title</code> is the name of the page that is refered to in the navigation.\nThe <code>template</code> defines the template the page gets rendered with. See the <a href=\"#templates\">templates section</a> for details.\nThe <code>fragment</code> is optional, see the <a href=\"#templates\">templates section</a> for details.\nThe <code>children</code> list is optional and can be used to leave out or reorder certain pages.\nThe <code>tags</code> list is optional and can be used to search for pages.\nThe <code>collapsed</code> attribute is optional and can be used to initially collapse the children pages.</p>\n<h3 id=\"referencing-components\" tabindex=\"-1\">Referencing components</h3>\n<p>The <code>README.md</code> contents for the atoms page might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Atoms&quot;</span>,\n  <span class=\"hljs-attr\">components</span>: [<span class=\"hljs-string\">&quot;heading&quot;</span>, <span class=\"hljs-string\">&quot;text&quot;</span>, <span class=\"hljs-string\">&quot;link&quot;</span>, <span class=\"hljs-string\">&quot;button&quot;</span>]\n}\n</code></pre>\n<p>The <code>components</code> list references the component ids that should be included as child pages for this page.\nThink of the components parent page as a kind of category ‚Äì¬†here we are using the Atomic Design Methodology to group components.</p>\n<h3 id=\"referencing-design-tokens\" tabindex=\"-1\">Referencing design tokens</h3>\n<p>The <code>page.config.js</code> can also reference design tokens.\nFor details see the <a href=\"/advanced/design-tokens/\">design token docs</a>.</p>\n<h2 id=\"additional-page-files\" tabindex=\"-1\">Additional page files</h2>\n<p>A page can have extra files and folders, too.\nYou can use this to add images or downloadable files for pages.\nThese files and folders will be copied to the target path.\nFiles and folders that start with an underscore are ignored.</p>\n<h2 id=\"templates\" tabindex=\"-1\">Templates</h2>\n<p>Custom page templates are expected to be located in the <code>templates</code> directory defined in the <a href=\"/basics/config/#source\">source configuration</a>.</p>\n<p>Here is an example structure for some templates:</p>\n<pre class=\"hljs lang-tree\"><code>templates\n|___home.pug\n|___checkout\n    |___cart.pug\n    |___partial.pug\n</code></pre>\n<p>You can reference these templates as <code>home.pug</code> and <code>checkout/cart.pug</code> as the value for the <code>template</code> attribute of the page.\nTemplates are expected to return the whole content of the page, from <code>DOCTYPE</code> to <code>&lt;/html&gt;</code>.</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Sample home page&quot;</span>,\n  <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">&quot;home.pug&quot;</span>,\n  <span class=\"hljs-attr\">context</span>: {\n    <span class=\"hljs-attr\">pageTitle</span>: <span class=\"hljs-string\">&quot;Welcome to ACME Corp.&quot;</span>\n  }\n}\n</code></pre>\n<p>In addition to that you can also define a <code>fragment</code>.\nIf this is defined, it will be rendered and the output will replace the <code>&lt;!-- uiengine:content --&gt;</code> comment in the <code>template</code>.\nFragments in contrast to templates only provide the partial content, not the whole page markup.</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Page with fragment&quot;</span>,\n  <span class=\"hljs-attr\">fragment</span>: <span class=\"hljs-string\">&quot;checkout/partial.pug&quot;</span>,\n  <span class=\"hljs-attr\">context</span>: {\n    <span class=\"hljs-attr\">variableInFragment</span>: <span class=\"hljs-string\">&quot;Hello from inside the fragment!&quot;</span>\n  }\n}\n</code></pre>\n<h3 id=\"providing-data\" tabindex=\"-1\">Providing data</h3>\n<p>As you can use these custom templates to render example/prototype pages for your website/application, you might want to provide some sample data.\nTo pass this data into your template, you can use the <code>context</code> property of the page:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-keyword\">const</span> teasers = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;teasers/home.json&quot;</span>)\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Sample home page&quot;</span>,\n  <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">&quot;home.pug&quot;</span>,\n  <span class=\"hljs-attr\">context</span>: {\n    <span class=\"hljs-attr\">pageTitle</span>: <span class=\"hljs-string\">&quot;Welcome to ACME Corp.&quot;</span>,\n    teasers\n  }\n}\n</code></pre>\n<p>In this case the template <code>home</code> gets rendered with the variables <code>pageTitle</code> and <code>teasers</code>.</p>"
    },
    "basics/variant": {
      "childIds": [],
      "id": "basics/variant",
      "title": "Variant",
      "isTitleFromHeading": true,
      "path": "basics/variant",
      "sourcePath": "site/basics/variant",
      "readmeFile": "site/basics/variant/README.md",
      "type": "documentation",
      "content": "<h1 id=\"variant\" tabindex=\"-1\">Variant</h1>\n<p>A variant is an usage example of a component.\nIn the UIengine terminology it offers a preview of the component and the data it can be rendered with.</p>\n<div class='ytEmbed'><iframe title=\"UIengine Introduction 03: Components and Variants\" src=\"https://www.youtube-nocookie.com/embed/videoseries?list=PLBXz0hPvV2jNAFb9KxvV-2Op8cy3tA8E2&index=2\" frameborder=\"0\" allow=\"autoplay; encrypted-media; picture-in-picture\" allowfullscreen></iframe></div>\n<h2 id=\"directory-structure\" tabindex=\"-1\">Directory Structure</h2>\n<p>Variants are stored per component in the components <code>variants</code> folder.\nA variant is a file that gets rendered by the assigned <a href=\"/adapters/\">adapter</a>.</p>\n<p>Here is an example for the variants of a <code>button</code> component:</p>\n<pre class=\"hljs lang-tree\"><code>components\n|___button\n    |___variants\n        |___button-default.pug\n        |___button-primary.pug\n</code></pre>\n<p>To add meta data to the variant, just use the <code>variants</code> list in the <a href=\"/basics/component/#component-file\">component file</a>.\nThe meta data can supply the <code>file</code>, <code>title</code>, <code>description</code> and <code>label</code> for the variant.\nYou might also want to provide the <code>context</code> (data and variables) for rendering the variant.</p>\n<p>The component file for the button (<code>button/component.config.js</code>) might look like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Button&quot;</span>,\n  <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;B1&quot;</span>,\n\n  <span class=\"hljs-comment\">// General context, shared across all variants</span>\n  <span class=\"hljs-attr\">context</span>: {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Click me!&quot;</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;submit&quot;</span>\n  },\n  <span class=\"hljs-attr\">variants</span>: [\n    {\n      <span class=\"hljs-attr\">file</span>: <span class=\"hljs-string\">&quot;button-default.png&quot;</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Default button&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;B1-1&quot;</span>\n      <span class=\"hljs-comment\">// the default button inherits the general context</span>\n    },\n    {\n      <span class=\"hljs-attr\">file</span>: <span class=\"hljs-string\">&quot;button-primary.png&quot;</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Primary button&quot;</span>,\n      <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">&quot;Use this for calls to action&quot;</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;B1-2&quot;</span>,\n      <span class=\"hljs-comment\">// the primary button provides its own context,</span>\n      <span class=\"hljs-comment\">// hence it does not inherit the general context</span>\n      <span class=\"hljs-attr\">context</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Click me now!&quot;</span>,\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;submit&quot;</span>,\n        <span class=\"hljs-attr\">primary</span>: <span class=\"hljs-literal\">true</span>\n      }\n    }\n  ]\n}\n</code></pre>\n<p>Attributes:</p>\n<ul>\n<li><code>file</code> is the only required attribute and references the variants filename.</li>\n<li><code>context</code> is the data the variant file gets rendered with.\nIf the veriant does not specify an own context it will be inherited from the general context specified on the component level.</li>\n<li><code>title</code> and <code>description</code> get displayed in the documentation.</li>\n<li><code>label</code> is an individual marker that can be used as a reference in mockups or wireframes to reference variants.</li>\n<li><code>themeIds</code>: Restricts display to only the given list of theme ids.</li>\n</ul>\n<p>You can also provide a short version of the <code>variants</code> list like this:</p>\n<pre class=\"hljs lang-js\"><code><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Button&quot;</span>,\n  <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;B1&quot;</span>,\n\n  <span class=\"hljs-comment\">// General context, shared across all variants</span>\n  <span class=\"hljs-attr\">context</span>: {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Click me!&quot;</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;submit&quot;</span>\n  },\n\n  <span class=\"hljs-attr\">variants</span>: [\n    <span class=\"hljs-string\">&quot;button-default.png&quot;</span>,\n    <span class=\"hljs-string\">&quot;button-primary.png&quot;</span>\n  ]\n}\n</code></pre>\n<p>This is useful if you want to manipulate the order and are fine with these defaults:</p>\n<ul>\n<li><code>file</code>: The filename from the list</li>\n<li><code>title</code>: The titleized filename without the extension</li>\n<li><code>context</code>: The general context specified on the component level</li>\n</ul>\n<p>You also have the option to leave out the <code>variants</code> attribute altogether.\nIn this case all files inside the components variants folder will be used with the mentioned defaults.</p>\n<h2 id=\"code-and-preview\" tabindex=\"-1\">Code and Preview</h2>\n<p>To omit certain parts in the raw code and rendered preview, you can use the HTML comment markers.</p>\n<p>Hide something in the raw code view:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-comment\">&lt;!-- omit:code:start --&gt;</span>\nEverything in between these HTML comments is omitted in the raw code view\n<span class=\"hljs-comment\">&lt;!-- omit:code:end --&gt;</span>\n</code></pre>\n<p>Hide something in the rendered preview:</p>\n<pre class=\"hljs lang-html\"><code><span class=\"hljs-comment\">&lt;!-- omit:preview:start --&gt;</span>\nEverything in between these HTML comments is omitted in the rendered preview\n<span class=\"hljs-comment\">&lt;!-- omit:preview:end --&gt;</span>\n</code></pre>\n<h3 id=\"testing\" tabindex=\"-1\">Testing</h3>\n<p>In case you are running browser tests against the previews (e.g. visual regression testing), please make sure to use the iframe content pages directly.\nThis way you will enjoy faster load times and more stable tests.</p>"
    },
    "development/changelog": {
      "childIds": [],
      "id": "development/changelog",
      "title": "Changelog",
      "isTitleFromHeading": true,
      "path": "development/changelog",
      "sourcePath": "site/development/changelog",
      "readmeFile": "site/development/changelog/README.md",
      "type": "documentation",
      "content": "<h1 id=\"changelog\" tabindex=\"-1\">Changelog</h1>\n<h2 id=\"%5B3.3.0%5D---ongoing-development\" tabindex=\"-1\">[3.3.0] - Ongoing development</h2>\n<h3 id=\"added\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Copy code to clipboard functionality</li>\n<li>Handle RGB color token values</li>\n</ul>\n<h3 id=\"changed\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Update styles of A11y plugin UI</li>\n</ul>\n<h2 id=\"%5B3.2.0%5D---14.06.2021\" tabindex=\"-1\">[3.2.0] - 14.06.2021</h2>\n<h3 id=\"added-1\" tabindex=\"-1\">Added</h3>\n<ul>\n<li><a href=\"/adapters/nunjucks/\">Nunjucks adapter</a> provided by <a href=\"https://github.com/CosAnca\">@CosAnca</a>.</li>\n</ul>\n<h3 id=\"changed-1\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Require Node.js &gt;= 14.15 (current latest LTS)</li>\n</ul>\n<h2 id=\"%5B3.1.0%5D---17.07.2020\" tabindex=\"-1\">[3.1.0] - 17.07.2020</h2>\n<h3 id=\"changed-2\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>UI overhaul, major thanks and props to <a href=\"https://github.com/CosAnca\">@CosAnca</a>!</li>\n</ul>\n<h3 id=\"added-2\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Add logo option to <a href=\"/basics/config/#project-config\">config</a></li>\n<li><a href=\"/advanced/design-tokens/\">Extend tokens representations</a> with opacity, box-shadow and border styles.</li>\n</ul>\n<h2 id=\"%5B3.0.0%5D---22.04.2020\" tabindex=\"-1\">[3.0.0] - 22.04.2020</h2>\n<h3 id=\"added-3\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Add theme labels for preview iframes</li>\n<li>Official logo, thanks <a href=\"https://persiel.com/\">@janpersiel</a>!</li>\n</ul>\n<h3 id=\"changed-3\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Require Node.js &gt;= 12.16 (current latest LTS)</li>\n</ul>\n<h3 id=\"removed\" tabindex=\"-1\">Removed</h3>\n<ul>\n<li>Removed migrations for v2</li>\n<li>Deprecated <code>@uiengine/bridge-theo</code></li>\n</ul>\n<h2 id=\"%5B2.6.0%5D---17.01.2020\" tabindex=\"-1\">[2.6.0] - 17.01.2020</h2>\n<h3 id=\"added-4\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Plugins API, see the <a href=\"/advanced/plugins/\">plugin docs</a>.</li>\n<li>UI: Re-add variant HTML to code view. <a href=\"https://github.com/dennisreimann/uiengine/pull/54\">Thanks @therealpecus</a></li>\n</ul>\n<h3 id=\"changed-4\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Performance optimizations</li>\n<li>EJS: Adapter upgrades to EJS 3</li>\n</ul>\n<h3 id=\"fixes\" tabindex=\"-1\">Fixes</h3>\n<ul>\n<li>Webpack: Set correct chunk names</li>\n<li>Core: Correct error report in case config file cannot be read</li>\n<li>Windows compatibility</li>\n</ul>\n<h2 id=\"%5B2.5.0%5D---2019-08-22\" tabindex=\"-1\">[2.5.0] - 2019-08-22</h2>\n<h3 id=\"added-5\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Webpack adapter: Add <code>debug</code> option for displaying detailed build information</li>\n<li>Provide custom page <code>foot</code> via the <a href=\"/advanced/ui/\"><code>ui</code> config</a>.</li>\n</ul>\n<h3 id=\"removed-1\" tabindex=\"-1\">Removed</h3>\n<ul>\n<li>Webpack adapter: Removed <code>extensions</code> option (now they are inferred automatically)</li>\n<li>Deprecated <code>@uiengine/adapter-react</code> and <code>@uiengine/adapter-vue</code>\n<ul>\n<li>Please use the <a href=\"/adapters/webpack/\">Webpack adapter</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-5\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Webpack adapter: Improve build</li>\n<li>Core: Build performance improvements</li>\n</ul>\n<h2 id=\"%5B2.4.0%5D---2019-07-24\" tabindex=\"-1\">[2.4.0] - 2019-07-24</h2>\n<h3 id=\"added-6\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Webpack adapter warns about incorrect config</li>\n</ul>\n<h3 id=\"removed-2\" tabindex=\"-1\">Removed</h3>\n<ul>\n<li>UI does not display nested properties anymore\n<ul>\n<li>Will be brought back once prop-types parsing gets revised.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-6\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Improve Webpack adapter build</li>\n<li>Deprecated Vue adapter, please use the <a href=\"/adapters/webpack/\">Webpack adapter</a>.</li>\n</ul>\n<h3 id=\"fixes-1\" tabindex=\"-1\">Fixes</h3>\n<ul>\n<li>UI: Asset prefetch paths got fixed</li>\n</ul>\n<h2 id=\"%5B2.3.0%5D---2019-06-28\" tabindex=\"-1\">[2.3.0] - 2019-06-28</h2>\n<h3 id=\"added-7\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Webpack adapter production ready\n<ul>\n<li>Support dependency graph and property extartion for Vue and React</li>\n<li>Support for the <code>filesForComponent</code> and <code>filesForVariant</code> hooks</li>\n<li>See the <a href=\"/adapters/webpack/\">Webpack adapter docs</a> for details.</li>\n</ul>\n</li>\n<li>Custom file watches can be listed as <code>source.additionalWatches</code> in the config\n<ul>\n<li>See the <a href=\"/basics/config/#source\"><code>config.source</code> docs</a> for details.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B2.2.0%5D---2019-05-09\" tabindex=\"-1\">[2.2.0] - 2019-05-09</h2>\n<h3 id=\"added-8\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Lazy load preview iframes to improve performance on component pages with many variants.</li>\n<li>Pages can now also define a <code>fragment</code>, which works similar to the <code>template</code>.\n<ul>\n<li>See the <a href=\"/basics/page/#templates\">page documentation</a> for details.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"removed-3\" tabindex=\"-1\">Removed</h3>\n<ul>\n<li>Removed variant parts and rendered output from state as it bloats up the UI file size.</li>\n</ul>\n<h2 id=\"%5B2.1.0%5D---2019-04-25\" tabindex=\"-1\">[2.1.0] - 2019-04-25</h2>\n<h3 id=\"added-9\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Provide custom meta tags via the <a href=\"/advanced/ui/\"><code>ui</code> config</a>.</li>\n<li>Option to restrict variant display to a list of given theme ids.\n<ul>\n<li>See the <code>themeIds</code> option of the <a href=\"/basics/variant/\">variant configuration</a>.</li>\n</ul>\n</li>\n<li>Experimental Webpack adapter\n<ul>\n<li>See the <a href=\"/adapters/webpack/\">Webpack adapter docs</a> for details.</li>\n<li>Requires the <code>&lt;!-- uiengine:foot --&gt;</code> comment to be present in the template.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-7\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Option to restrict token display to a list of given theme ids changes from <code>theme</code> to <code>themeIds</code>.\n<ul>\n<li>See the <code>themeIds</code> option of the <a href=\"/advanced/design-tokens/\">token configuration</a>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"fixes-2\" tabindex=\"-1\">Fixes</h3>\n<ul>\n<li>HTML escaping in titles</li>\n</ul>\n<h2 id=\"%5B2.0.0%5D---2019-01-28\" tabindex=\"-1\">[2.0.0] - 2019-01-28</h2>\n<h3 id=\"added-10\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Improved Windows compatibility, feedback welcome!</li>\n<li>The pen icon in the interface opens files in VS Code when working locally</li>\n<li>Pages can be set to be initially collapsed ‚Äì <a href=\"/basics/page/\">see the docs</a></li>\n<li><code>@uiengine/core</code> exports the <code>markdown</code> function to transform markdown to html</li>\n</ul>\n<h3 id=\"changed-8\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Themes are now a first-class citizen and widely supported\n<ul>\n<li>The <code>themes</code> config option moved to the <a href=\"/basics/config/\">root level config</a> (previously <code>ui.themes</code>)</li>\n<li>Each variant and page gets rendered per theme</li>\n<li>The adapters <a href=\"/adapters/#render(opts%2C-filepath%2C-data)\"><code>render</code> function</a> gets the <code>themeId</code> as an option</li>\n</ul>\n</li>\n<li>Moved <code>analyticsId</code> config option into <a href=\"/advanced/ui/\"><code>ui</code> config</a>.</li>\n<li>The <code>filesFor‚Ä¶</code> adapter function now also receive the <a href=\"/adapters/#scaffolding\"><code>options</code> as first argument</a></li>\n<li>Extracted Theo integration into its own <a href=\"/advanced/integrations/#theo\"><code>@uiengine/bridge-theo</code> package</a></li>\n<li>YAML and Frontmatter in Markdown files has been removed.\n<ul>\n<li>File changes:\n<ul>\n<li><a href=\"http://component.md\">component.md</a> -&gt; component.config.js and <a href=\"http://README.md\">README.md</a></li>\n<li><a href=\"http://page.md\">page.md</a> -&gt; page.config.js and <a href=\"http://README.md\">README.md</a></li>\n<li>data.yml -&gt; data.js (deprecated, see below)</li>\n<li>Entity.yml -&gt; Entity.js</li>\n</ul>\n</li>\n<li>Use the <code>npx uiengine migrate</code> command to automatically migrate</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"removed-4\" tabindex=\"-1\">Removed</h3>\n<ul>\n<li>Removed <code>source.data</code> config option\n<ul>\n<li>Require files directly in your <code>component.config.js</code> or <code>page.config.js</code>.</li>\n</ul>\n</li>\n<li>Removed <code>source.entities</code> config option\n<ul>\n<li>Require files directly in your <code>component.config.js</code>.</li>\n<li>One less custom concept to worry about :)</li>\n</ul>\n</li>\n<li>Removed <code>ui.customActions</code>\n<ul>\n<li>Will be replaced with a third-party plugin API</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"%5B1.4.0%5D---2018-11-01\" tabindex=\"-1\">[1.4.0] - 2018-11-01</h2>\n<h3 id=\"added-11\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>CSS Adapter: Parses css files for custom properties and display theme settings for components.\n<ul>\n<li>For details see the <a href=\"/adapters/css/\">CSS adapter docs</a>.</li>\n</ul>\n</li>\n<li>React Adapter: Partial support for PropType definitions in external files</li>\n</ul>\n<h2 id=\"%5B1.3.0%5D---2018-10-14\" tabindex=\"-1\">[1.3.0] - 2018-10-14</h2>\n<h3 id=\"added-12\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>The UI displays theme properties (css custom properties)</li>\n<li>Override locales or single keys in a locale\n<ul>\n<li>For details see the <a href=\"/advanced/ui/#locales\">UI docs</a>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-9\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Improved the styles and structure for content pages and elements\n<ul>\n<li>Tl;DR More whitespace and bigger fonts</li>\n<li>The <code>intro</code> and <code>details</code> containers got added</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B1.2.0%5D---2018-09-30\" tabindex=\"-1\">[1.2.0] - 2018-09-30</h2>\n<h3 id=\"added-13\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Dependency graph for components\n<ul>\n<li>Adapters can extract the dependencies and dependents in <code>registerComponentFile</code></li>\n<li>Component dependencies and dependents get displayed in the UI</li>\n<li>Component changes rebuild the dependent variants and templates automatically</li>\n<li>The React and Pug adapters support this already</li>\n</ul>\n</li>\n<li>Option <code>ui.repoBaseUrl</code> for linking components and pages to the repo\n<ul>\n<li>For details see the <a href=\"/advanced/ui/\">UI docs</a>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-10\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Removed parent package <code>uiengine</code>\n<ul>\n<li>use scoped packages directly, e.g. <code>@uiengine/core</code> plus <code>@uiengine/adapter-html</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B1.1.0%5D---2018-09-02\" tabindex=\"-1\">[1.1.0] - 2018-09-02</h2>\n<h3 id=\"added-14\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Allow <code>source.components</code> config to define lists of directories</li>\n<li>Config overrides for CLI (see CLI help/usage for details)</li>\n<li>Option <code>skipScaffold</code> for adapters\n<ul>\n<li>Prevents creation of files for components and variants</li>\n<li>Replaces the cli <code>--exclude</code> flag for the <code>uiengine component</code> command</li>\n<li>See the <a href=\"/adapters/\">adapters documentation</a> for details.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-11\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Removed filesFor hooks from html adapter\n<ul>\n<li>The html adapter is part of the standard install, but it is unlikely that you would want to generate the files for every new component.</li>\n</ul>\n</li>\n<li>Variant ID and filename contain the index\n<ul>\n<li>allows for rendering multiple variants based on the same file</li>\n</ul>\n</li>\n<li>CLI commands (init, component, page) do not overwrite existing files\n<ul>\n<li>unless the <code>--force</code> flag is provided</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"fixed\" tabindex=\"-1\">Fixed</h3>\n<ul>\n<li>Windows compatibility</li>\n<li>Proper handling of scroll position on navigation</li>\n</ul>\n<h2 id=\"%5B1.0.0%5D---2018-07-17\" tabindex=\"-1\">[1.0.0] - 2018-07-17</h2>\n<p>First public stable release. üéâ</p>\n<p>For details see the\n<a href=\"https://dennisreimann.de/articles/uiengine-1-0.html\">UIengien 1.0 blog post</a>.</p>\n<h2 id=\"%5B0.23.0%5D---2018-07-15\" tabindex=\"-1\">[0.23.0] - 2018-07-15</h2>\n<h3 id=\"added-15\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Set browser-sync <code>startPath</code> for custom UI base</li>\n<li>New <a href=\"https://uiengine.uix.space/\">documentation site</a>, generated with the UIengine itself</li>\n</ul>\n<h3 id=\"changed-12\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Improved the CLI flags and usage docs</li>\n<li>Improved <a href=\"/adapters/react/\">React adapter hooks</a></li>\n<li>Improved React adapter Properties extraction</li>\n</ul>\n<h3 id=\"fixed-1\" tabindex=\"-1\">Fixed</h3>\n<ul>\n<li>Skip generating HTML Sketchapp export if template is missing</li>\n</ul>\n<h2 id=\"%5B0.22.0%5D---2018-06-19\" tabindex=\"-1\">[0.22.0] - 2018-06-19</h2>\n<h3 id=\"added-16\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Adapters <code>registerComponentFile</code> functions can extract and return information from component files\n<ul>\n<li>Use this to generate documentation from your #React PropType definitions etc.</li>\n<li>See the <a href=\"/adapters/\">adapters documentation</a> for details.</li>\n</ul>\n</li>\n<li>Option to wrap the content of a <a href=\"/basics/page/#templates\">custom page template</a> in the preview template\n<ul>\n<li>In case you want to provide only the content of the <code>&lt;body&gt;</code>.</li>\n<li>Works like with variants, whose content replaces the <code>uiengine:content</code> comment.</li>\n</ul>\n</li>\n<li>Internal links in documentation are now handled via the UI router.</li>\n</ul>\n<h3 id=\"fixed-2\" tabindex=\"-1\">Fixed</h3>\n<ul>\n<li>Use theme hash across all previews and links</li>\n<li>Display of indented code blocks</li>\n</ul>\n<h2 id=\"%5B0.21.0%5D---2018-06-11\" tabindex=\"-1\">[0.21.0] - 2018-06-11</h2>\n<h3 id=\"added-17\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Viewports are a new preview mode in addition to breakpoints\n<ul>\n<li>See the <a href=\"/advanced/ui/#viewports\"><code>ui.viewports</code></a> documentation for details</li>\n</ul>\n</li>\n<li>Rebuild variants and tokens on preview template change</li>\n<li>The comment <code>&lt;!-- uiengine:class --&gt;</code> now also gets replaced in the preview template\n<ul>\n<li>This should be added to the <code>html</code> tag and can be used for customizing special previews.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-13\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>CSS custom properties used by UIengine are now prefixed with <code>--uie-</code>\n<ul>\n<li>In case you are using the <a href=\"/advanced/ui/#customStylesFile\"><code>ui.customStylesFile</code></a> you need to update the UIengine custom properties.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"fixed-3\" tabindex=\"-1\">Fixed</h3>\n<ul>\n<li>Hide inactive scrollbars on Windows</li>\n</ul>\n<h2 id=\"%5B0.20.0%5D---2018-05-24\" tabindex=\"-1\">[0.20.0] - 2018-05-24</h2>\n<h3 id=\"added-18\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Fonts are now part of the html-sketchapp export</li>\n<li>Copy page files in subfolders</li>\n<li>Demo content (pages and components) can be generated on initialization\n<ul>\n<li>Use the <code>uiengine init --demo</code> command</li>\n<li>This should give a basic overview for some of the features</li>\n<li>Beware: It uses the html adapter, hence the components are very simplistic!</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-14\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Design token rendering:\n<ul>\n<li>The tokens are now rendered as part of the preview template</li>\n<li>Added the token types <code>font</code> and <code>icon</code></li>\n<li>For details see the <a href=\"/advanced/ui/\">design token docs</a></li>\n</ul>\n</li>\n<li>Reduced file watching delay for faster refreshes</li>\n</ul>\n<h2 id=\"%5B0.19.0%5D---2018-04-14\" tabindex=\"-1\">[0.19.0] - 2018-04-14</h2>\n<h3 id=\"added-19\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Optional theme switch for your projects themes\n<ul>\n<li>For details see the <a href=\"/advanced/ui/\">UI docs</a></li>\n</ul>\n</li>\n<li>The adapter <code>render</code> function can now return structured data\n<ul>\n<li>For details see the <a href=\"/adapters/\">adapter docs</a></li>\n</ul>\n</li>\n<li>The output can be served from a subdirectory\n<ul>\n<li>For details see the new <code>base</code> <a href=\"/advanced/ui/\">theme option</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-15\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Rename the <code>@uiengine/theme</code> package to <code>@uiengine/ui</code></li>\n<li>Changed the main config object <code>theme</code> to <code>ui</code>:\n<ul>\n<li>The former <code>theme.options</code> moved into the <code>ui</code> config object.</li>\n<li>Moved the <code>breakpoints</code> into the new <code>ui</code> config object.</li>\n<li>Removed the <code>module</code> option.</li>\n<li>For details see the <a href=\"/advanced/ui/\">UI docs</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B0.18.0%5D---2018-04-02\" tabindex=\"-1\">[0.18.0] - 2018-04-02</h2>\n<h3 id=\"changed-16\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Use scoped packages on npm:\n<ul>\n<li><code>uiengine</code> -&gt; <code>@uiengine/core</code></li>\n<li><code>uiengine-theme</code> -&gt; <code>@uiengine/theme</code> (note: renamed to <code>@uiengine/ui</code> with v0.19.0)</li>\n<li><code>uiengine-adapter-XYZ</code> -&gt; <code>@uiengine/adapter-XYZ</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B0.17.0%5D---2018-04-02\" tabindex=\"-1\">[0.17.0] - 2018-04-02</h2>\n<h3 id=\"added-20\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Integration for [html-sketchapp]\n<ul>\n<li>Generates Sketch libraries via html-sketchapp-cli compatible export</li>\n<li>For details see the <a href=\"/advanced/integrations/#html-sketchapp\">integration docs</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"changed-17\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Replace the <code>variantTemplate</code> config entry key name with <code>template</code></li>\n<li>Rename the <code>uiengine-theme-default</code> package to ``uiengine-theme`</li>\n</ul>\n<h2 id=\"%5B0.16.0%5D---2018-03-11\" tabindex=\"-1\">[0.16.0] - 2018-03-11</h2>\n<h3 id=\"added-21\" tabindex=\"-1\">Added</h3>\n<ul>\n<li>Search for pages and components title, tags and content excerpt</li>\n<li>Tags for pages, components and variants\n<ul>\n<li>Can be used to cross-reference and search items</li>\n</ul>\n</li>\n<li>Ability for toggling the navigation on desktop breakpoints</li>\n<li>Links in footer to navigate to the previous and next page</li>\n<li>Settings for locale and highlight.js theme</li>\n<li>Integration for Google Analytics\n<ul>\n<li>Provide your <code>analyticsId</code> (<code>UA-XXX-X</code>) in the <a href=\"/basics/config/\">project config</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B0.15.0%5D---2018-03-01\" tabindex=\"-1\">[0.15.0] - 2018-03-01</h2>\n<h3 id=\"changed-18\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>Variant data moved into component config\n<ul>\n<li>For details see the <a href=\"/basics/variant/\">variant docs</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B0.14.0%5D---2018-02-10\" tabindex=\"-1\">[0.14.0] - 2018-02-10</h2>\n<h3 id=\"changed-19\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>More flexible configuration lookup\n<ul>\n<li>The config file is now retrieved via <a href=\"https://github.com/davidtheclark/cosmiconfig\">cosmiconfig</a></li>\n<li>The default config file is <code>uiengine.config.js</code></li>\n<li>For alternative ways to store your config (e.g. in package.json) see the cosmiconfig docs</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"%5B0.13.0%5D---2018-02-09\" tabindex=\"-1\">[0.13.0] - 2018-02-09</h2>\n<h3 id=\"changed-20\" tabindex=\"-1\">Changed</h3>\n<ul>\n<li>\n<p>Simplified templates config and template references</p>\n<ul>\n<li>The <code>templates</code> entry in the config file got removed</li>\n<li>The <code>variantTemplate</code> entry got added to the config file</li>\n<li>Templates need to be referred to in page config by full name (including the file extension)</li>\n<li>Templates are still resolved relative to <code>source.templates</code></li>\n</ul>\n</li>\n<li>\n<p>Wording changed from ‚Äúschema‚Äù to ‚Äúentities‚Äù and ‚Äúproperties‚Äù</p>\n<ul>\n<li>This reflects the actual use case and intention of the feature better</li>\n</ul>\n</li>\n<li>\n<p>The UI is now extendible via CSS custom properties</p>\n<ul>\n<li>The <code>skin</code> option for the UI has been removed</li>\n<li>You can now style the UI using the <a href=\"/advanced/ui/\"><code>customStylesFile</code> option</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>All notable changes to this project will be documented in this file.</p>\n<p>The format is based on <a href=\"http://keepachangelog.com/en/1.0.0/\">Keep a Changelog</a>\nand this project adheres to <a href=\"http://semver.org/spec/v2.0.0.html\">Semantic Versioning</a>.</p>"
    },
    "development/code-of-conduct": {
      "childIds": [],
      "id": "development/code-of-conduct",
      "title": "Code of Conduct",
      "isTitleFromHeading": true,
      "path": "development/code-of-conduct",
      "sourcePath": "site/development/code-of-conduct",
      "readmeFile": "site/development/code-of-conduct/README.md",
      "type": "documentation",
      "content": "<h1 id=\"code-of-conduct\" tabindex=\"-1\">Code of Conduct</h1>\n<h2 id=\"tl%3Bdr\" tabindex=\"-1\">TL;DR</h2>\n<p>Be nice and friendly.</p>\n<h2 id=\"our-pledge\" tabindex=\"-1\">Our Pledge</h2>\n<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>\n<h2 id=\"our-standards\" tabindex=\"-1\">Our Standards</h2>\n<p>Examples of behavior that contributes to creating a positive environment include:</p>\n<ul>\n<li>Using welcoming and inclusive language</li>\n<li>Being respectful of differing viewpoints and experiences</li>\n<li>Gracefully accepting constructive criticism</li>\n<li>Focusing on what is best for the community</li>\n<li>Showing empathy towards other community members</li>\n</ul>\n<p>Examples of unacceptable behavior by participants include:</p>\n<ul>\n<li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li>\n<li>Trolling, insulting/derogatory comments, and personal or political attacks</li>\n<li>Public or private harassment</li>\n<li>Publishing others‚Äô private information, such as a physical or electronic address, without explicit permission</li>\n<li>Other conduct which could reasonably be considered inappropriate in a professional setting</li>\n</ul>\n<h2 id=\"our-responsibilities\" tabindex=\"-1\">Our Responsibilities</h2>\n<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p>\n<p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>\n<h2 id=\"scope\" tabindex=\"-1\">Scope</h2>\n<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>\n<h2 id=\"enforcement\" tabindex=\"-1\">Enforcement</h2>\n<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at <a href=\"mailto:mail@dennisreimann.de\">mail@dennisreimann.de</a>. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p>\n<p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project‚Äôs leadership.</p>\n<h2 id=\"attribution\" tabindex=\"-1\">Attribution</h2>\n<p>This Code of Conduct is adapted from the <a href=\"http://contributor-covenant.org\">Contributor Covenant</a>,\nversion 1.4, available at <a href=\"http://contributor-covenant.org/version/1/4/\">http://contributor-covenant.org/version/1/4</a></p>"
    },
    "development/contributing": {
      "childIds": [],
      "id": "development/contributing",
      "title": "Contributing",
      "isTitleFromHeading": true,
      "path": "development/contributing",
      "sourcePath": "site/development/contributing",
      "readmeFile": "site/development/contributing/README.md",
      "type": "documentation",
      "content": "<h1 id=\"contributing\" tabindex=\"-1\">Contributing</h1>\n<ul>\n<li><a href=\"#development-workflow\">Development Workflow</a></li>\n<li><a href=\"#notes\">Important Notes and Guidelines</a></li>\n</ul>\n<h2 id=\"development-workflow\" tabindex=\"-1\">Development workflow</h2>\n<h3 id=\"%F0%9F%93%A6-setup\" tabindex=\"-1\">üì¶ Setup</h3>\n<p>Dependencies are managed via <a href=\"https://yarnpkg.com/\">Yarn</a>.\nOnce you have Yarn installed and this repo cloned, you can setup the packages:</p>\n<pre class=\"hljs lang-bash\"><code>yarn install\n</code></pre>\n<h3 id=\"%F0%9F%9B%A0-development\" tabindex=\"-1\">üõ† Development</h3>\n<p>Create a build and rebuild on file change.</p>\n<pre class=\"hljs lang-bash\"><code>yarn start\n</code></pre>\n<h3 id=\"%F0%9F%9A%A5-tests\" tabindex=\"-1\">üö• Tests</h3>\n<p>Basic linting is done in the project root:</p>\n<pre class=\"hljs lang-bash\"><code>yarn lint\n</code></pre>\n<p>Run the tests:</p>\n<pre class=\"hljs lang-bash\"><code>yarn <span class=\"hljs-built_in\">test</span>\n</code></pre>\n<p>Run the tests continually on file change:</p>\n<pre class=\"hljs lang-bash\"><code>yarn test-watch\n</code></pre>\n<p>Tests with coverage info:</p>\n<pre class=\"hljs lang-bash\"><code>yarn cover\n</code></pre>\n<h3 id=\"%F0%9F%9A%80-release\" tabindex=\"-1\">üöÄ Release</h3>\n<p>Build and publish new release:</p>\n<pre class=\"hljs lang-bash\"><code>yarn release\n</code></pre>\n<p>This command also accepts the <a href=\"https://github.com/lerna/lerna#publish\">lerna publish options</a>.</p>\n<h2 id=\"notes\" tabindex=\"-1\">Notes</h2>\n<p>Here are some things to keep in mind and guidelines for working on the UIengine codebase.</p>\n<h3 id=\"coding-standards\" tabindex=\"-1\">Coding standards</h3>\n<p>This project uses the <a href=\"http://standardjs.com/\">JavaScript Standard Style</a>.\nWe try to keep it as functional as possible, so we are using <a href=\"http://ramdajs.com/\">Ramda</a> a lot.</p>\n<h3 id=\"public-functions-in-core\" tabindex=\"-1\">Public functions in core</h3>\n<ul>\n<li>Are always <code>async</code></li>\n<li>First argument should always be the <code>state</code></li>\n</ul>\n<h3 id=\"emojis-in-commit-messages\" tabindex=\"-1\">Emojis in commit messages</h3>\n<p>Please make sure that your commit messages start with a somehow fitting emoji.</p>\n<h3 id=\"reward-yourself\" tabindex=\"-1\">Reward yourself</h3>\n<p>We are using <a href=\"https://allcontributors.org/\">All Contributors</a> to show who helped the project.\nIn case you have contributed and are missing on that list, feel free to <a href=\"https://allcontributors.org/docs/en/bot/usage\">add yourself</a>!</p>"
    }
  },
  "components": {},
  "navigation": {
    "index": {
      "childIds": [
        "basics",
        "advanced",
        "adapters",
        "development"
      ],
      "id": "index",
      "itemId": "index",
      "path": "/",
      "type": "documentation",
      "title": "UIengine"
    },
    "adapters": {
      "prevSiblingId": "advanced",
      "nextSiblingId": "development",
      "childIds": [
        "adapters/css",
        "adapters/ejs",
        "adapters/handlebars",
        "adapters/html",
        "adapters/marko",
        "adapters/nunjucks",
        "adapters/pug",
        "adapters/react",
        "adapters/vue",
        "adapters/webpack"
      ],
      "parentId": "index",
      "id": "adapters",
      "itemId": "adapters",
      "path": "/adapters/",
      "type": "documentation",
      "title": "Adapters"
    },
    "advanced": {
      "prevSiblingId": "basics",
      "nextSiblingId": "adapters",
      "childIds": [
        "advanced/deployment",
        "advanced/design-tokens",
        "advanced/integrations",
        "advanced/plugins",
        "advanced/properties",
        "advanced/ui"
      ],
      "parentId": "index",
      "id": "advanced",
      "itemId": "advanced",
      "isStructural": true,
      "path": "/advanced/",
      "type": "documentation",
      "title": "Advanced"
    },
    "basics": {
      "nextSiblingId": "advanced",
      "childIds": [
        "basics/getting-started",
        "basics/config",
        "basics/component",
        "basics/variant",
        "basics/page"
      ],
      "parentId": "index",
      "id": "basics",
      "itemId": "basics",
      "isStructural": true,
      "path": "/basics/",
      "type": "documentation",
      "title": "Basics"
    },
    "development": {
      "prevSiblingId": "adapters",
      "childIds": [
        "development/changelog",
        "development/code-of-conduct",
        "development/contributing"
      ],
      "parentId": "index",
      "id": "development",
      "itemId": "development",
      "isStructural": true,
      "path": "/development/",
      "type": "documentation",
      "title": "Development"
    },
    "adapters/css": {
      "nextSiblingId": "adapters/ejs",
      "parentId": "adapters",
      "id": "adapters/css",
      "itemId": "adapters/css",
      "path": "/adapters/css/",
      "type": "documentation",
      "title": "CSS"
    },
    "adapters/ejs": {
      "prevSiblingId": "adapters/css",
      "nextSiblingId": "adapters/handlebars",
      "parentId": "adapters",
      "id": "adapters/ejs",
      "itemId": "adapters/ejs",
      "path": "/adapters/ejs/",
      "type": "documentation",
      "title": "EJS"
    },
    "adapters/handlebars": {
      "prevSiblingId": "adapters/ejs",
      "nextSiblingId": "adapters/html",
      "parentId": "adapters",
      "id": "adapters/handlebars",
      "itemId": "adapters/handlebars",
      "path": "/adapters/handlebars/",
      "type": "documentation",
      "title": "Handlebars"
    },
    "adapters/html": {
      "prevSiblingId": "adapters/handlebars",
      "nextSiblingId": "adapters/marko",
      "parentId": "adapters",
      "id": "adapters/html",
      "itemId": "adapters/html",
      "path": "/adapters/html/",
      "type": "documentation",
      "title": "HTML"
    },
    "adapters/marko": {
      "prevSiblingId": "adapters/html",
      "nextSiblingId": "adapters/nunjucks",
      "parentId": "adapters",
      "id": "adapters/marko",
      "itemId": "adapters/marko",
      "path": "/adapters/marko/",
      "type": "documentation",
      "title": "Marko"
    },
    "adapters/nunjucks": {
      "prevSiblingId": "adapters/marko",
      "nextSiblingId": "adapters/pug",
      "parentId": "adapters",
      "id": "adapters/nunjucks",
      "itemId": "adapters/nunjucks",
      "path": "/adapters/nunjucks/",
      "type": "documentation",
      "title": "Nunjucks"
    },
    "adapters/pug": {
      "prevSiblingId": "adapters/nunjucks",
      "nextSiblingId": "adapters/react",
      "parentId": "adapters",
      "id": "adapters/pug",
      "itemId": "adapters/pug",
      "path": "/adapters/pug/",
      "type": "documentation",
      "title": "Pug"
    },
    "adapters/react": {
      "prevSiblingId": "adapters/pug",
      "nextSiblingId": "adapters/vue",
      "parentId": "adapters",
      "id": "adapters/react",
      "itemId": "adapters/react",
      "path": "/adapters/react/",
      "type": "documentation",
      "title": "React"
    },
    "adapters/vue": {
      "prevSiblingId": "adapters/react",
      "nextSiblingId": "adapters/webpack",
      "parentId": "adapters",
      "id": "adapters/vue",
      "itemId": "adapters/vue",
      "path": "/adapters/vue/",
      "type": "documentation",
      "title": "Vue"
    },
    "adapters/webpack": {
      "prevSiblingId": "adapters/vue",
      "parentId": "adapters",
      "id": "adapters/webpack",
      "itemId": "adapters/webpack",
      "path": "/adapters/webpack/",
      "type": "documentation",
      "title": "Webpack"
    },
    "advanced/deployment": {
      "nextSiblingId": "advanced/design-tokens",
      "parentId": "advanced",
      "id": "advanced/deployment",
      "itemId": "advanced/deployment",
      "path": "/advanced/deployment/",
      "type": "documentation",
      "title": "Deployment"
    },
    "advanced/design-tokens": {
      "prevSiblingId": "advanced/deployment",
      "nextSiblingId": "advanced/integrations",
      "parentId": "advanced",
      "id": "advanced/design-tokens",
      "itemId": "advanced/design-tokens",
      "path": "/advanced/design-tokens/",
      "type": "documentation",
      "title": "Design Tokens"
    },
    "advanced/integrations": {
      "prevSiblingId": "advanced/design-tokens",
      "nextSiblingId": "advanced/plugins",
      "parentId": "advanced",
      "id": "advanced/integrations",
      "itemId": "advanced/integrations",
      "path": "/advanced/integrations/",
      "type": "documentation",
      "title": "Integrations"
    },
    "advanced/plugins": {
      "prevSiblingId": "advanced/integrations",
      "nextSiblingId": "advanced/properties",
      "parentId": "advanced",
      "id": "advanced/plugins",
      "itemId": "advanced/plugins",
      "path": "/advanced/plugins/",
      "type": "documentation",
      "title": "Plugins"
    },
    "advanced/properties": {
      "prevSiblingId": "advanced/plugins",
      "nextSiblingId": "advanced/ui",
      "parentId": "advanced",
      "id": "advanced/properties",
      "itemId": "advanced/properties",
      "path": "/advanced/properties/",
      "type": "documentation",
      "title": "Properties"
    },
    "advanced/ui": {
      "prevSiblingId": "advanced/properties",
      "parentId": "advanced",
      "id": "advanced/ui",
      "itemId": "advanced/ui",
      "path": "/advanced/ui/",
      "type": "documentation",
      "title": "User Interface"
    },
    "basics/component": {
      "prevSiblingId": "basics/config",
      "nextSiblingId": "basics/variant",
      "parentId": "basics",
      "id": "basics/component",
      "itemId": "basics/component",
      "path": "/basics/component/",
      "type": "documentation",
      "title": "Component"
    },
    "basics/config": {
      "prevSiblingId": "basics/getting-started",
      "nextSiblingId": "basics/component",
      "parentId": "basics",
      "id": "basics/config",
      "itemId": "basics/config",
      "path": "/basics/config/",
      "type": "documentation",
      "title": "Configuration"
    },
    "basics/getting-started": {
      "nextSiblingId": "basics/config",
      "parentId": "basics",
      "id": "basics/getting-started",
      "itemId": "basics/getting-started",
      "path": "/basics/getting-started/",
      "type": "documentation",
      "title": "Getting Started"
    },
    "basics/page": {
      "prevSiblingId": "basics/variant",
      "parentId": "basics",
      "id": "basics/page",
      "itemId": "basics/page",
      "path": "/basics/page/",
      "type": "documentation",
      "title": "Page"
    },
    "basics/variant": {
      "prevSiblingId": "basics/component",
      "nextSiblingId": "basics/page",
      "parentId": "basics",
      "id": "basics/variant",
      "itemId": "basics/variant",
      "path": "/basics/variant/",
      "type": "documentation",
      "title": "Variant"
    },
    "development/changelog": {
      "nextSiblingId": "development/code-of-conduct",
      "parentId": "development",
      "id": "development/changelog",
      "itemId": "development/changelog",
      "path": "/development/changelog/",
      "type": "documentation",
      "title": "Changelog"
    },
    "development/code-of-conduct": {
      "prevSiblingId": "development/changelog",
      "nextSiblingId": "development/contributing",
      "parentId": "development",
      "id": "development/code-of-conduct",
      "itemId": "development/code-of-conduct",
      "path": "/development/code-of-conduct/",
      "type": "documentation",
      "title": "Code of Conduct"
    },
    "development/contributing": {
      "prevSiblingId": "development/code-of-conduct",
      "parentId": "development",
      "id": "development/contributing",
      "itemId": "development/contributing",
      "path": "/development/contributing/",
      "type": "documentation",
      "title": "Contributing"
    }
  }
}
